/**
 * Generated by Apache Royale Compiler from org/apache/royale/core/StrandWithModel.as
 * org.apache.royale.core.StrandWithModel
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.StrandWithModel');
/* Royale Dependency List: org.apache.royale.core.IBead,org.apache.royale.core.IBeadModel,org.apache.royale.core.ValuesManager,org.apache.royale.utils.sendStrandEvent,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.Strand');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.core.Strand}
 */
org.apache.royale.core.StrandWithModel = function() {
  org.apache.royale.core.StrandWithModel.base(this, 'constructor');
};
goog.inherits(org.apache.royale.core.StrandWithModel, org.apache.royale.core.Strand);


/**
 * @private
 * @type {org.apache.royale.core.IBeadModel}
 */
org.apache.royale.core.StrandWithModel.prototype.org_apache_royale_core_StrandWithModel__model;


/**
 *  @copy org.apache.royale.core.IStrand#addBead()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9
 *  @royaleignorecoercion org.apache.royale.core.IBeadModel
 * @override
 */
org.apache.royale.core.StrandWithModel.prototype.addBead = function(bead) {
  org.apache.royale.core.StrandWithModel.superClass_.addBead.apply(this, [ bead] );
  if (org.apache.royale.utils.Language.is(bead, org.apache.royale.core.IBeadModel))
    this.org_apache_royale_core_StrandWithModel__model = bead;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IBeadModel}
 */
org.apache.royale.core.StrandWithModel.prototype.model;


org.apache.royale.core.StrandWithModel.prototype.get__model = function() {
  if (this.org_apache_royale_core_StrandWithModel__model == null) {
    this.addBead(new (org.apache.royale.core.ValuesManager.valuesImpl.getValue(this, "iBeadModel"))());
  }
  return this.org_apache_royale_core_StrandWithModel__model;
};


org.apache.royale.core.StrandWithModel.prototype.set__model = function(value) {
  if (this.org_apache_royale_core_StrandWithModel__model != value) {
    this.addBead(value);
    org.apache.royale.utils.sendStrandEvent(this, "modelChanged");
  }
};


Object.defineProperties(org.apache.royale.core.StrandWithModel.prototype, /** @lends {org.apache.royale.core.StrandWithModel.prototype} */ {
/**
 * @type {org.apache.royale.core.IBeadModel}
 */
model: {
get: org.apache.royale.core.StrandWithModel.prototype.get__model,
set: org.apache.royale.core.StrandWithModel.prototype.set__model}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.StrandWithModel.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'StrandWithModel', qName: 'org.apache.royale.core.StrandWithModel', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.StrandWithModel.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'model': { type: 'org.apache.royale.core.IBeadModel', access: 'readwrite', declaredBy: 'org.apache.royale.core.StrandWithModel'}
      };
    },
    methods: function () {
      return {
        'StrandWithModel': { type: '', declaredBy: 'org.apache.royale.core.StrandWithModel'},
        'addBead': { type: 'void', declaredBy: 'org.apache.royale.core.StrandWithModel', parameters: function () { return [ 'org.apache.royale.core.IBead', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.core.StrandWithModel.prototype.ROYALE_COMPILE_FLAGS = 10;
