/**
 * Generated by Apache Royale Compiler from org/apache/royale/utils/BrowserInfo.as
 * org.apache.royale.utils.BrowserInfo
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.BrowserInfo');
/* Royale Dependency List: org.apache.royale.utils.OSUtils*/
goog.provide('org.apache.royale.utils.BrowserInfo.Enforcer');




/**
 * @constructor
 * @param {org.apache.royale.utils.BrowserInfo.Enforcer} enf
 */
org.apache.royale.utils.BrowserInfo = function(enf) {
  this.org_apache_royale_utils_BrowserInfo_init();
};


/**
 * @private
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.org_apache_royale_utils_BrowserInfo__browser;


/**
 * @private
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.org_apache_royale_utils_BrowserInfo__version;


/**
 * @private
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.org_apache_royale_utils_BrowserInfo__engine;


/**
 * @private
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.org_apache_royale_utils_BrowserInfo__engineVersion;


/**
 * @private
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.org_apache_royale_utils_BrowserInfo__formFactor;


/**
 * True if the platform is a tablet or phone.
 * 
 * @langversion 3.0
 * @playerversion Flash 10.2
 * @playerversion AIR 2.6
 * @productversion Royale 0.9.0
 * @return {boolean}
 */
org.apache.royale.utils.BrowserInfo.prototype.isMobile = function() {
  return this.formFactor != "Desktop" && this.formFactor != "TV";
};


/**
 * @private
 * @type {org.apache.royale.utils.BrowserInfo}
 */
org.apache.royale.utils.BrowserInfo._current;


/**
 * Returns a BrowserInfo object with properties of the current runtime.
 * 
 * @langversion 3.0
 * @playerversion Flash 10.2
 * @playerversion AIR 2.6
 * @productversion Royale 0.9.0
 * @nocollapse
 * @return {org.apache.royale.utils.BrowserInfo}
 */
org.apache.royale.utils.BrowserInfo.current = function() {
  if (!org.apache.royale.utils.BrowserInfo._current)
    org.apache.royale.utils.BrowserInfo._current = new org.apache.royale.utils.BrowserInfo(new org.apache.royale.utils.BrowserInfo.Enforcer());
  return org.apache.royale.utils.BrowserInfo._current;
};


/**
 * 
 
 
 
 
 
 
 
 
 
 
 
 
 
 * @private
 */
org.apache.royale.utils.BrowserInfo.prototype.org_apache_royale_utils_BrowserInfo_init = function() {
  var /** @type {string} */ ua = org.apache.royale.utils.Language.string(window["navigator"]["userAgent"]);
  if (ua.indexOf("iPad") != -1)
    this.org_apache_royale_utils_BrowserInfo__formFactor = "iPad";
  else if (ua.indexOf("iPhone") != -1)
    this.org_apache_royale_utils_BrowserInfo__formFactor = "iPhone";
  else if (ua.indexOf("iPod") != -1)
    this.org_apache_royale_utils_BrowserInfo__formFactor = "iPod";
  else if (ua.indexOf("Tablet") != -1)
    this.org_apache_royale_utils_BrowserInfo__formFactor = "Tablet";
  else if (ua.indexOf("Mobile") != -1)
    this.org_apache_royale_utils_BrowserInfo__formFactor = "Mobile";
  else if (ua.indexOf("Android") != -1)
    this.org_apache_royale_utils_BrowserInfo__formFactor = "Tablet";
  else if (ua.indexOf("TV;") != -1)
    this.org_apache_royale_utils_BrowserInfo__formFactor = "TV";
  else
    this.org_apache_royale_utils_BrowserInfo__formFactor = "Desktop";
  var /** @type {Array} */ verMatch;
  if (ua.search(/trident/i) > -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "IE";
    verMatch = ua.match(/\brv[\u0020:]+[\d\.]+/g);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = org.apache.royale.utils.Language.string(verMatch[0].split(":")[1]);
    this.org_apache_royale_utils_BrowserInfo__engine = "Trident";
    verMatch = ua.match(/trident\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
  } else if (ua.search(/edge/i) > -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "IE";
    this.org_apache_royale_utils_BrowserInfo__engine = "EdgeHTML";
    verMatch = ua.match(/edge\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
  } else if (ua.search(/firefox\/[\d\.]/i) > -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "Firefox";
    this.org_apache_royale_utils_BrowserInfo__engine = "Gecko";
    verMatch = ua.match(/firefox\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
    verMatch = ua.match(/gecko\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
  } else if (ua.search(/version\/[\d\.]/i) > -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "Safari";
    this.org_apache_royale_utils_BrowserInfo__engine = "WebKit";
    verMatch = ua.match(/version\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
    verMatch = ua.match(/applewebkit\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
  } else if (ua.search(/opera\/[\d\.]/i) > -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "Opera";
    this.org_apache_royale_utils_BrowserInfo__engine = "Presto";
    verMatch = ua.match(/opera\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
  } else if (ua.search(/opr\/[\d\.]/i) > -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "Opera";
    this.org_apache_royale_utils_BrowserInfo__engine = "Blink";
    verMatch = ua.match(/opr\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
  } else if (ua.search(/chrome\/[\d\.]/i) > -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "Chrome";
    verMatch = ua.match(/chrome\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
    var /** @type {number} */ verNum = parseFloat(this.org_apache_royale_utils_BrowserInfo__version);
    if (isNaN(verNum) || verNum < 28 || this.org_apache_royale_utils_BrowserInfo__formFactor.indexOf("iP") != -1)
      this.org_apache_royale_utils_BrowserInfo__engine = "WebKit";
    else
      this.org_apache_royale_utils_BrowserInfo__engine = "Blink";
  } else if (ua.indexOf("CriOS") != -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "Chrome";
    verMatch = ua.match(/CriOS\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
    this.org_apache_royale_utils_BrowserInfo__engine = "WebKit";
  } else if (ua.indexOf("FxiOS") != -1) {
    this.org_apache_royale_utils_BrowserInfo__browser = "Firefox";
    verMatch = ua.match(/FxiOS\/[\d\.]+/i);
    if (verMatch)
      this.org_apache_royale_utils_BrowserInfo__version = this.org_apache_royale_utils_BrowserInfo__engineVersion = org.apache.royale.utils.Language.string(verMatch[0].split("/")[1]);
    this.org_apache_royale_utils_BrowserInfo__engine = "WebKit";
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.browser;


org.apache.royale.utils.BrowserInfo.prototype.get__browser = function() {
  return this.org_apache_royale_utils_BrowserInfo__browser;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.version;


org.apache.royale.utils.BrowserInfo.prototype.get__version = function() {
  return this.org_apache_royale_utils_BrowserInfo__version;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.engine;


org.apache.royale.utils.BrowserInfo.prototype.get__engine = function() {
  return this.org_apache_royale_utils_BrowserInfo__engine;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.engineVersion;


org.apache.royale.utils.BrowserInfo.prototype.get__engineVersion = function() {
  return this.org_apache_royale_utils_BrowserInfo__engineVersion;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.formFactor;


org.apache.royale.utils.BrowserInfo.prototype.get__formFactor = function() {
  return this.org_apache_royale_utils_BrowserInfo__formFactor;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.utils.BrowserInfo.prototype.os;


org.apache.royale.utils.BrowserInfo.prototype.get__os = function() {
  return org.apache.royale.utils.OSUtils.getOS();
};


Object.defineProperties(org.apache.royale.utils.BrowserInfo.prototype, /** @lends {org.apache.royale.utils.BrowserInfo.prototype} */ {
/**
 * @type {string}
 */
browser: {
get: org.apache.royale.utils.BrowserInfo.prototype.get__browser},
/**
 * @type {string}
 */
version: {
get: org.apache.royale.utils.BrowserInfo.prototype.get__version},
/**
 * @type {string}
 */
engine: {
get: org.apache.royale.utils.BrowserInfo.prototype.get__engine},
/**
 * @type {string}
 */
engineVersion: {
get: org.apache.royale.utils.BrowserInfo.prototype.get__engineVersion},
/**
 * @type {string}
 */
formFactor: {
get: org.apache.royale.utils.BrowserInfo.prototype.get__formFactor},
/**
 * @type {string}
 */
os: {
get: org.apache.royale.utils.BrowserInfo.prototype.get__os}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.BrowserInfo.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'BrowserInfo', qName: 'org.apache.royale.utils.BrowserInfo', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.BrowserInfo.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'browser': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.utils.BrowserInfo'},
        'version': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.utils.BrowserInfo'},
        'engine': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.utils.BrowserInfo'},
        'engineVersion': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.utils.BrowserInfo'},
        'formFactor': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.utils.BrowserInfo'},
        'os': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.utils.BrowserInfo'}
      };
    },
    methods: function () {
      return {
        'BrowserInfo': { type: '', declaredBy: 'org.apache.royale.utils.BrowserInfo', parameters: function () { return [ 'Enforcer', false ]; }},
        'isMobile': { type: 'Boolean', declaredBy: 'org.apache.royale.utils.BrowserInfo'},
        '|current': { type: 'org.apache.royale.utils.BrowserInfo', declaredBy: 'org.apache.royale.utils.BrowserInfo'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.utils.BrowserInfo.prototype.ROYALE_COMPILE_FLAGS = 10;



/**
 * @constructor
 */
org.apache.royale.utils.BrowserInfo.Enforcer = function() {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.BrowserInfo.Enforcer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Enforcer', qName: 'org.apache.royale.utils.BrowserInfo.Enforcer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.BrowserInfo.Enforcer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {};
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.utils.BrowserInfo.Enforcer.prototype.ROYALE_COMPILE_FLAGS = 10;
