/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/DialogHeader.as
 * com.unhurdle.spectrum.DialogHeader
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.DialogHeader');
/* Royale Dependency List: com.unhurdle.spectrum.DialogTitle,org.apache.royale.core.IChild,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.Group');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.Group}
 */
com.unhurdle.spectrum.DialogHeader = function() {
  com.unhurdle.spectrum.DialogHeader.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.DialogHeader, com.unhurdle.spectrum.Group);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.DialogHeader.prototype.getSelector = function() {
  return "spectrum-Dialog-header";
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.DialogHeader.prototype.com_unhurdle_spectrum_DialogHeader__title = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.DialogTitle}
 */
com.unhurdle.spectrum.DialogHeader.prototype.com_unhurdle_spectrum_DialogHeader_titleElem = null;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.DialogHeader.prototype.title;


com.unhurdle.spectrum.DialogHeader.prototype.get__title = function() {
  return this.com_unhurdle_spectrum_DialogHeader__title;
};


com.unhurdle.spectrum.DialogHeader.prototype.set__title = function(value) {
  this.com_unhurdle_spectrum_DialogHeader__title = value;
  if (value) {
    var /** @type {boolean} */ needElem = this.com_unhurdle_spectrum_DialogHeader_titleElem == null;
    if (this.numElements > 0) {
      var /** @type {org.apache.royale.core.IChild} */ firstElem = this.getElementAt(0);
      if (org.apache.royale.utils.Language.is(firstElem, com.unhurdle.spectrum.DialogTitle)) {
        this.com_unhurdle_spectrum_DialogHeader_titleElem = firstElem;
        needElem = false;
      }
    }
    if (needElem) {
      this.com_unhurdle_spectrum_DialogHeader_titleElem = new com.unhurdle.spectrum.DialogTitle();
      this.addElementAt(this.com_unhurdle_spectrum_DialogHeader_titleElem, 0);
    }
  }
  if (this.com_unhurdle_spectrum_DialogHeader_titleElem) {
    this.com_unhurdle_spectrum_DialogHeader_titleElem.text = value;
  }
};


Object.defineProperties(com.unhurdle.spectrum.DialogHeader.prototype, /** @lends {com.unhurdle.spectrum.DialogHeader.prototype} */ {
/**
 * @type {string}
 */
title: {
get: com.unhurdle.spectrum.DialogHeader.prototype.get__title,
set: com.unhurdle.spectrum.DialogHeader.prototype.set__title}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.DialogHeader.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DialogHeader', qName: 'com.unhurdle.spectrum.DialogHeader', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.DialogHeader.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'title': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.DialogHeader'}
      };
    },
    methods: function () {
      return {
        'DialogHeader': { type: '', declaredBy: 'com.unhurdle.spectrum.DialogHeader'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.DialogHeader.prototype.ROYALE_COMPILE_FLAGS = 11;
