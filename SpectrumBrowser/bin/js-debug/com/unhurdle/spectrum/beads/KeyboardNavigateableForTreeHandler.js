/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/beads/KeyboardNavigateableForTreeHandler.as
 * com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler');
/* Royale Dependency List: com.unhurdle.spectrum.renderers.TreeItemRenderer,org.apache.royale.core.IStrand,org.apache.royale.events.ItemClickedEvent,org.apache.royale.events.KeyboardEvent,org.apache.royale.events.utils.NavigationKeys,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.beads.KeyboardNavigateableHandler');
goog.require('com.unhurdle.spectrum.interfaces.IKeyboardHandler');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.beads.KeyboardNavigateableHandler}
 * @implements {com.unhurdle.spectrum.interfaces.IKeyboardHandler}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler = function() {
  com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler, com.unhurdle.spectrum.beads.KeyboardNavigateableHandler);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype.changeValue = function(event) {
  var self = this;
  com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.superClass_.changeValue.apply(this, [ event] );
  var /** @type {string} */ key = event.key;
  var /** @type {com.unhurdle.spectrum.renderers.TreeItemRenderer} */ treeRenderer = this.focusableItemRenderer;
  switch (key) {
    case org.apache.royale.events.utils.NavigationKeys.RIGHT:
      if (this.focusableItemRenderer) {
        if (!treeRenderer.isOpen) {
          this.focusableItemRenderer.addEventListener("expanded", function() {
            self.focusableItemRenderer.keyboardFocused = true;
          });
          treeRenderer.isOpen = true;
          var /** @type {org.apache.royale.events.ItemClickedEvent} */ expandEvent = new org.apache.royale.events.ItemClickedEvent("itemExpanded");
          expandEvent.data = this.focusableItemRenderer.data;
          expandEvent.index = this.getRendererIndex(this.focusableItemRenderer);
          setTimeout(function() {
            self.focusableItemRenderer.dispatchEvent(expandEvent);
          });
        }
      }
      break;
    case org.apache.royale.events.utils.NavigationKeys.LEFT:
      if (this.focusableItemRenderer) {
        if (treeRenderer.isOpen) {
          treeRenderer.isOpen = false;
          var /** @type {org.apache.royale.events.ItemClickedEvent} */ expandEvent1 = new org.apache.royale.events.ItemClickedEvent("itemExpanded");
          expandEvent1.data = this.focusableItemRenderer.data;
          expandEvent1.index = this.getRendererIndex(this.focusableItemRenderer);
          setTimeout(function() {
            self.focusableItemRenderer.dispatchEvent(expandEvent1);
          });
        }
      }
      break;
  }
};


com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype.set__strand = function(value) {
  com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.superClass_.set__strand.apply(this, [ value] );
  this.host.focusParent.removeEventListener("click", org.apache.royale.utils.Language.closure(this.clickHandler, this, 'clickHandler'));
};


Object.defineProperties(com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype, /** @lends {com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype} */ {
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'KeyboardNavigateableForTreeHandler', qName: 'com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler', kind: 'class' }], interfaces: [com.unhurdle.spectrum.interfaces.IKeyboardHandler] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler'}
      };
    },
    methods: function () {
      return {
        'KeyboardNavigateableForTreeHandler': { type: '', declaredBy: 'com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableForTreeHandler.prototype.ROYALE_COMPILE_FLAGS = 11;
