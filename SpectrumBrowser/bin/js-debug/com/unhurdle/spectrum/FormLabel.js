/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/FormLabel.as
 * com.unhurdle.spectrum.FormLabel
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.FormLabel');
/* Royale Dependency List: com.unhurdle.spectrum.Form,org.apache.royale.core.IChild,org.apache.royale.core.IParent,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.FieldLabel');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.FieldLabel}
 */
com.unhurdle.spectrum.FormLabel = function() {
  com.unhurdle.spectrum.FormLabel.base(this, 'constructor');
  this.typeNames = "spectrum-Form-itemLabel";
};
goog.inherits(com.unhurdle.spectrum.FormLabel, com.unhurdle.spectrum.FieldLabel);


/**
 * @override
 */
com.unhurdle.spectrum.FormLabel.prototype.addedToParent = function() {
  com.unhurdle.spectrum.FormLabel.superClass_.addedToParent.apply(this);
  var /** @type {org.apache.royale.core.IParent} */ curParent = this.parent;
  while (curParent) {
    if (org.apache.royale.utils.Language.is(curParent, com.unhurdle.spectrum.Form)) {
      var /** @type {string} */ position = curParent.labelPosition;
      if (position) {
        this.position = position;
      }
      break;
    }
    curParent = curParent.parent;
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.FormLabel.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'FormLabel', qName: 'com.unhurdle.spectrum.FormLabel', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.FormLabel.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'FormLabel': { type: '', declaredBy: 'com.unhurdle.spectrum.FormLabel'},
        'addedToParent': { type: 'void', declaredBy: 'com.unhurdle.spectrum.FormLabel'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.FormLabel.prototype.ROYALE_COMPILE_FLAGS = 11;
