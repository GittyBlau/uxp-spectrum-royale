/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/FieldLabel.as
 * com.unhurdle.spectrum.FieldLabel
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.FieldLabel');
/* Royale Dependency List: com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.const.IconType,com.unhurdle.spectrum.includes.FieldLabelInclude*/

goog.require('com.unhurdle.spectrum.TextBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.TextBase}
 */
com.unhurdle.spectrum.FieldLabel = function() {
  com.unhurdle.spectrum.FieldLabel.base(this, 'constructor');
  this.userSelect = false;
};
goog.inherits(com.unhurdle.spectrum.FieldLabel, com.unhurdle.spectrum.TextBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.FieldLabel.prototype.getSelector = function() {
  return com.unhurdle.spectrum.includes.FieldLabelInclude.getSelector();
};


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.FieldLabel.TOP = "top";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.FieldLabel.LEFT = "left";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.FieldLabel.RIGHT = "right";


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.FieldLabel.prototype.com_unhurdle_spectrum_FieldLabel__for = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.FieldLabel.prototype.com_unhurdle_spectrum_FieldLabel_requiredIcon = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.FieldLabel.prototype.com_unhurdle_spectrum_FieldLabel__required = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.FieldLabel.prototype.com_unhurdle_spectrum_FieldLabel__disabled = false;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.FieldLabel.prototype.com_unhurdle_spectrum_FieldLabel__position = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.FieldLabel.prototype.getTag = function() {
  return "label";
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.FieldLabel.prototype.for;


com.unhurdle.spectrum.FieldLabel.prototype.get__for = function() {
  return this.com_unhurdle_spectrum_FieldLabel__for;
};


com.unhurdle.spectrum.FieldLabel.prototype.set__for = function(value) {
  if (value != this.com_unhurdle_spectrum_FieldLabel__for) {
    if (value) {
      this.setAttribute("for", value);
    } else {
      this.removeAttribute("for");
    }
    this.com_unhurdle_spectrum_FieldLabel__for = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.FieldLabel.prototype.required;


com.unhurdle.spectrum.FieldLabel.prototype.get__required = function() {
  return this.com_unhurdle_spectrum_FieldLabel__required;
};


com.unhurdle.spectrum.FieldLabel.prototype.set__required = function(value) {
  if (value == !!this.com_unhurdle_spectrum_FieldLabel__required) {
    return;
  }
  if (value && !this.com_unhurdle_spectrum_FieldLabel_requiredIcon) {
    if (!this.textNode) {
      this.createTextNode();
    }
    var /** @type {string} */ type = com.unhurdle.spectrum.const.IconType.ASTERISK;
    this.com_unhurdle_spectrum_FieldLabel_requiredIcon = new com.unhurdle.spectrum.Icon(com.unhurdle.spectrum.Icon.getCSSTypeSelector(type));
    this.com_unhurdle_spectrum_FieldLabel_requiredIcon.type = type;
    this.com_unhurdle_spectrum_FieldLabel_requiredIcon.className = this.appendSelector("-requiredIcon");
    this.addElement(this.com_unhurdle_spectrum_FieldLabel_requiredIcon);
  } else if (this.com_unhurdle_spectrum_FieldLabel_requiredIcon) {
    this.com_unhurdle_spectrum_FieldLabel_requiredIcon.visible = value;
  }
  this.com_unhurdle_spectrum_FieldLabel__required = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.FieldLabel.prototype.disabled;


com.unhurdle.spectrum.FieldLabel.prototype.get__disabled = function() {
  return this.com_unhurdle_spectrum_FieldLabel__disabled;
};


com.unhurdle.spectrum.FieldLabel.prototype.set__disabled = function(value) {
  if (value != !!this.com_unhurdle_spectrum_FieldLabel__disabled) {
    this.toggle("is-disabled", value);
    this.com_unhurdle_spectrum_FieldLabel__disabled = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.FieldLabel.prototype.position;


com.unhurdle.spectrum.FieldLabel.prototype.get__position = function() {
  return this.com_unhurdle_spectrum_FieldLabel__position;
};


com.unhurdle.spectrum.FieldLabel.prototype.set__position = function(value) {
  if (value == this.com_unhurdle_spectrum_FieldLabel__position) {
    return;
  }
  if (this.com_unhurdle_spectrum_FieldLabel__position) {
    this.toggle(this.valueToSelector(this.com_unhurdle_spectrum_FieldLabel__position), false);
  }
  if (value == "top" || !value) {
    return;
  }
  switch (value) {
    case "left":
    
    case "right":
      break;
    default:
      throw new Error("invalid position: " + value);
  }
  this.toggle(this.valueToSelector(value), true);
  this.com_unhurdle_spectrum_FieldLabel__position = value;
};


Object.defineProperties(com.unhurdle.spectrum.FieldLabel.prototype, /** @lends {com.unhurdle.spectrum.FieldLabel.prototype} */ {
/**
 * @type {string}
 */
for: {
get: com.unhurdle.spectrum.FieldLabel.prototype.get__for,
set: com.unhurdle.spectrum.FieldLabel.prototype.set__for},
/**
 * @type {boolean}
 */
required: {
get: com.unhurdle.spectrum.FieldLabel.prototype.get__required,
set: com.unhurdle.spectrum.FieldLabel.prototype.set__required},
/**
 * @type {boolean}
 */
disabled: {
get: com.unhurdle.spectrum.FieldLabel.prototype.get__disabled,
set: com.unhurdle.spectrum.FieldLabel.prototype.set__disabled},
/**
 * @type {string}
 */
position: {
get: com.unhurdle.spectrum.FieldLabel.prototype.get__position,
set: com.unhurdle.spectrum.FieldLabel.prototype.set__position}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.FieldLabel.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'FieldLabel', qName: 'com.unhurdle.spectrum.FieldLabel', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.FieldLabel.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'for': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.FieldLabel'},
        'required': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.FieldLabel'},
        'disabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.FieldLabel'},
        'position': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.FieldLabel'}
      };
    },
    methods: function () {
      return {
        'FieldLabel': { type: '', declaredBy: 'com.unhurdle.spectrum.FieldLabel'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.FieldLabel.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.FieldLabel.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.FieldLabel);
