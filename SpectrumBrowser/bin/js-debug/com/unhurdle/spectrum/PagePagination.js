/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/PagePagination.as
 * com.unhurdle.spectrum.PagePagination
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.PagePagination');
/* Royale Dependency List: com.unhurdle.spectrum.TextNode,com.unhurdle.spectrum.includes.ActionButtonInclude,com.unhurdle.spectrum.newElement,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.Event,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/pagination/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.PagePagination = function() {
  com.unhurdle.spectrum.PagePagination.base(this, 'constructor');
  this.toggle(this.valueToSelector("listing"), true);
};
goog.inherits(com.unhurdle.spectrum.PagePagination, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.PagePagination.prototype.getSelector = function() {
  return "spectrum-Pagination";
};


/**
 * @private
 * @type {HTMLLinkElement}
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination_prev = null;


/**
 * @private
 * @type {HTMLLinkElement}
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination_next = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.PagePagination.prototype.getTag = function() {
  return "nav";
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.PagePagination.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.PagePagination.superClass_.createElement.apply(this);
  var /** @type {string} */ buttonBase = "spectrum-Button spectrum-Button--primary spectrum-Button--quiet ";
  this.com_unhurdle_spectrum_PagePagination_prev = com.unhurdle.spectrum.newElement("a", buttonBase + this.appendSelector("-prevButton"));
  var /** @type {com.unhurdle.spectrum.TextNode} */ prevSpan = new com.unhurdle.spectrum.TextNode("");
  prevSpan.element = com.unhurdle.spectrum.newElement("span", "spectrum-Button-label");
  prevSpan.text = "prev";
  this.com_unhurdle_spectrum_PagePagination_prev.appendChild(prevSpan.element);
  this.com_unhurdle_spectrum_PagePagination_prev.addEventListener("click", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_PagePagination_prevPage, this, 'com_unhurdle_spectrum_PagePagination_prevPage'));
  elem.appendChild(this.com_unhurdle_spectrum_PagePagination_prev);
  this.com_unhurdle_spectrum_PagePagination_next = com.unhurdle.spectrum.newElement("a", buttonBase + this.appendSelector("-nextButton"));
  var /** @type {com.unhurdle.spectrum.TextNode} */ nextSpan = new com.unhurdle.spectrum.TextNode("");
  nextSpan.element = com.unhurdle.spectrum.newElement("span", "spectrum-Button-label");
  nextSpan.text = "next";
  this.com_unhurdle_spectrum_PagePagination_next.appendChild(nextSpan.element);
  this.com_unhurdle_spectrum_PagePagination_next.addEventListener("click", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_PagePagination_nextPage, this, 'com_unhurdle_spectrum_PagePagination_nextPage'));
  elem.appendChild(this.com_unhurdle_spectrum_PagePagination_next);
  return elem;
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination__href = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination__selected = false;


/**
 * @private
 * @param {NodeList} children
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination_findChild = function(children) {
  var foreachiter0_target = children;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var selectedChild = foreachiter0_target[foreachiter0];
  {
    if (selectedChild.text && selectedChild.text == "" + this.selectedPage) {
      selectedChild.classList.add("is-selected");
    } else {
      if (selectedChild.classList && selectedChild.classList.contains("is-selected")) {
        selectedChild.classList.remove("is-selected");
      } else {
        if (selectedChild.children && selectedChild.children.length) {
          this.com_unhurdle_spectrum_PagePagination_findChild(selectedChild.children);
        }
      }
    }
  }}
  
};


/**
 * @private
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination_prevPage = function() {
  this.selectedPage > 1 ? this.selectedPage-- : this.selectedPage = 1;
};


/**
 * @private
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination_nextPage = function() {
  this.selectedPage < this.pagesNum ? this.selectedPage++ : this.selectedPage = this.pagesNum;
};


/**
 * @private
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination_enableOrDisable = function() {
  this.selectedPage == 1 ? this.com_unhurdle_spectrum_PagePagination_prev.classList.add("is-disabled") : this.com_unhurdle_spectrum_PagePagination_prev.classList.remove("is-disabled");
  this.selectedPage == this.pagesNum ? this.com_unhurdle_spectrum_PagePagination_next.classList.add("is-disabled") : this.com_unhurdle_spectrum_PagePagination_next.classList.remove("is-disabled");
};


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination__selectedPage = 2;


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination__pagesNum = 0;


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.PagePagination.prototype.com_unhurdle_spectrum_PagePagination_changeValue = function(ev) {
  this.selectedPage = Number(ev.target["textContent"]);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.PagePagination.prototype.href;


com.unhurdle.spectrum.PagePagination.prototype.get__href = function() {
  return this.com_unhurdle_spectrum_PagePagination__href;
};


com.unhurdle.spectrum.PagePagination.prototype.set__href = function(value) {
  if (value) {
    this.com_unhurdle_spectrum_PagePagination__href = value;
  } else {
    this.com_unhurdle_spectrum_PagePagination__href = "";
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.PagePagination.prototype.selected;


com.unhurdle.spectrum.PagePagination.prototype.get__selected = function() {
  return this.com_unhurdle_spectrum_PagePagination__selected;
};


com.unhurdle.spectrum.PagePagination.prototype.set__selected = function(value) {
  if (value) {
    this.com_unhurdle_spectrum_PagePagination__selected = value;
    this.com_unhurdle_spectrum_PagePagination_findChild(this.element.children);
  }
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.PagePagination.prototype.selectedPage;


com.unhurdle.spectrum.PagePagination.prototype.get__selectedPage = function() {
  return this.com_unhurdle_spectrum_PagePagination__selectedPage;
};


com.unhurdle.spectrum.PagePagination.prototype.set__selectedPage = function(val) {
  if (val) {
    this.com_unhurdle_spectrum_PagePagination__selectedPage = val;
    this.selected = true;
    this.com_unhurdle_spectrum_PagePagination_enableOrDisable();
  }
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.PagePagination.prototype.pagesNum;


com.unhurdle.spectrum.PagePagination.prototype.get__pagesNum = function() {
  return this.com_unhurdle_spectrum_PagePagination__pagesNum;
};


com.unhurdle.spectrum.PagePagination.prototype.set__pagesNum = function(val) {
  if (val != this.com_unhurdle_spectrum_PagePagination__pagesNum) {
    this.com_unhurdle_spectrum_PagePagination__pagesNum = val;
    for (var /** @type {number} */ i = 0; i < val; i++) {
      var /** @type {string} */ actionButtonSelector = com.unhurdle.spectrum.includes.ActionButtonInclude.getSelector();
      var /** @type {HTMLElement} */ link = com.unhurdle.spectrum.newElement("a", actionButtonSelector);
      link.classList.toggle(actionButtonSelector + "--quiet");
      var /** @type {com.unhurdle.spectrum.TextNode} */ node = new com.unhurdle.spectrum.TextNode("span");
      node.className = actionButtonSelector + "-label";
      node.text = "" + (i + 1);
      link.appendChild(node.element);
      link.addEventListener("click", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_PagePagination_changeValue, this, 'com_unhurdle_spectrum_PagePagination_changeValue'));
      this.element.insertBefore(link, this.com_unhurdle_spectrum_PagePagination_next);
    }
  }
};


Object.defineProperties(com.unhurdle.spectrum.PagePagination.prototype, /** @lends {com.unhurdle.spectrum.PagePagination.prototype} */ {
/**
 * @type {string}
 */
href: {
get: com.unhurdle.spectrum.PagePagination.prototype.get__href,
set: com.unhurdle.spectrum.PagePagination.prototype.set__href},
/**
 * @type {boolean}
 */
selected: {
get: com.unhurdle.spectrum.PagePagination.prototype.get__selected,
set: com.unhurdle.spectrum.PagePagination.prototype.set__selected},
/**
 * @type {number}
 */
selectedPage: {
get: com.unhurdle.spectrum.PagePagination.prototype.get__selectedPage,
set: com.unhurdle.spectrum.PagePagination.prototype.set__selectedPage},
/**
 * @type {number}
 */
pagesNum: {
get: com.unhurdle.spectrum.PagePagination.prototype.get__pagesNum,
set: com.unhurdle.spectrum.PagePagination.prototype.set__pagesNum}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.PagePagination.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PagePagination', qName: 'com.unhurdle.spectrum.PagePagination', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.PagePagination.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'href': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.PagePagination'},
        'selected': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.PagePagination'},
        'selectedPage': { type: 'Number', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.PagePagination'},
        'pagesNum': { type: 'int', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.PagePagination'}
      };
    },
    methods: function () {
      return {
        'PagePagination': { type: '', declaredBy: 'com.unhurdle.spectrum.PagePagination'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.PagePagination.prototype.ROYALE_COMPILE_FLAGS = 11;
