/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/renderers/TreeItemRendererBase.as
 * com.unhurdle.spectrum.renderers.TreeItemRendererBase
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.renderers.TreeItemRendererBase');
/* Royale Dependency List: org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.supportClasses.TreeListData,org.apache.royale.html.util.addElementToWrapper,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.renderers.ListItemRenderer');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.renderers.ListItemRenderer}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase = function() {
  com.unhurdle.spectrum.renderers.TreeItemRendererBase.base(this, 'constructor');
  this.typeNames = '';
};
goog.inherits(com.unhurdle.spectrum.renderers.TreeItemRendererBase, com.unhurdle.spectrum.renderers.ListItemRenderer);


/**
 * @private
 * @type {Array}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.com_unhurdle_spectrum_renderers_TreeItemRendererBase_children = null;


/**
 * @nocollapse
 * @type {number}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.indent = 10;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.getSelector = function() {
  return "spectrum-TreeView";
};


/**
 * @private
 * @type {org.apache.royale.html.supportClasses.TreeListData}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.com_unhurdle_spectrum_renderers_TreeItemRendererBase_treeListData = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = org.apache.royale.html.util.addElementToWrapper(this, this.getTag());
  return elem;
};


com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.set__data = function(value) {
  com.unhurdle.spectrum.renderers.TreeItemRendererBase.superClass_.set__data.apply(this, [ value] );
  this.com_unhurdle_spectrum_renderers_TreeItemRendererBase_children = value["children"];
  this.toggle(this.appendSelector("-item"), true);
  if (org.apache.royale.utils.Language.is(this.listData, org.apache.royale.html.supportClasses.TreeListData)) {
    this.com_unhurdle_spectrum_renderers_TreeItemRendererBase_treeListData = this.listData;
    var /** @type {string} */ indentVal = "";
    if (this.com_unhurdle_spectrum_renderers_TreeItemRendererBase_treeListData.depth != -1) {
      indentVal = (this.com_unhurdle_spectrum_renderers_TreeItemRendererBase_treeListData.depth - 1) * com.unhurdle.spectrum.renderers.TreeItemRendererBase.indent + "px";
    }
    this.element.style.paddingLeft = indentVal;
    if (this.icon) {
      this.icon.toggle(this.appendSelector('-itemIcon'), true);
    }
  }
};


Object.defineProperties(com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype, /** @lends {com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype} */ {
/**
 * @type {Object}
 */
data: {
get: org.apache.royale.html.supportClasses.UIItemRendererBase.prototype.get__data,
set: com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.set__data}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TreeItemRendererBase', qName: 'com.unhurdle.spectrum.renderers.TreeItemRendererBase', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        '|indent': { type: 'Number', get_set: function (/** * */ v) {return v !== undefined ? com.unhurdle.spectrum.renderers.TreeItemRendererBase.indent = v : com.unhurdle.spectrum.renderers.TreeItemRendererBase.indent;}}
      };
    },
    accessors: function () {
      return {
        'data': { type: 'Object', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.renderers.TreeItemRendererBase'}
      };
    },
    methods: function () {
      return {
        'TreeItemRendererBase': { type: '', declaredBy: 'com.unhurdle.spectrum.renderers.TreeItemRendererBase'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.renderers.TreeItemRendererBase.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.renderers.TreeItemRendererBase);
