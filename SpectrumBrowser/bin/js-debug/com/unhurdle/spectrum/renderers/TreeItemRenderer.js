/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/renderers/TreeItemRenderer.as
 * com.unhurdle.spectrum.renderers.TreeItemRenderer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.renderers.TreeItemRenderer');
/* Royale Dependency List: com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.TextNode,org.apache.royale.core.IParent,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.Event,org.apache.royale.events.ItemClickedEvent,org.apache.royale.events.MouseEvent,org.apache.royale.html.elements.A,org.apache.royale.html.supportClasses.TreeListData,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.renderers.TreeItemRendererBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.renderers.TreeItemRendererBase}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer = function() {
  com.unhurdle.spectrum.renderers.TreeItemRenderer.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.renderers.TreeItemRenderer, com.unhurdle.spectrum.renderers.TreeItemRendererBase);


/**
 * @private
 * @type {Array}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.com_unhurdle_spectrum_renderers_TreeItemRenderer_children = null;


/**
 * @nocollapse
 * @type {number}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.indent = 10;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.getSelector = function() {
  return "spectrum-TreeView";
};


/**
 * @private
 * @type {org.apache.royale.html.supportClasses.TreeListData}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.com_unhurdle_spectrum_renderers_TreeItemRenderer_treeListData = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.com_unhurdle_spectrum_renderers_TreeItemRenderer__isOpen = false;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.setText = function(value) {
  this.textNode.text = value;
};


/**
 * @protected
 * @type {org.apache.royale.html.elements.A}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.link = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.renderers.TreeItemRenderer.superClass_.createElement.apply(this);
  this.link = new org.apache.royale.html.elements.A();
  this.link.className = this.appendSelector("-itemLink");
  this.addElement(this.link);
  this.textNode = new com.unhurdle.spectrum.TextNode("span");
  this.textNode.className = this.appendSelector("-itemLabel");
  this.textNode.element.style.userSelect = "none";
  this.textNode.element.style.display = "inline";
  this.link.element.appendChild(this.textNode.element);
  return elem;
};


com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.set__data = function(value) {
  var self = this;
  com.unhurdle.spectrum.renderers.TreeItemRenderer.superClass_.set__data.apply(this, [ value] );
  if (org.apache.royale.utils.Language.is(this.listData, org.apache.royale.html.supportClasses.TreeListData)) {
    this.com_unhurdle_spectrum_renderers_TreeItemRenderer_treeListData = this.listData;
    if (this.listData["hasChildren"]) {
      var /** @type {string} */ type = "ChevronRightMedium";
      if (!this.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon) {
        this.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon = new com.unhurdle.spectrum.Icon(com.unhurdle.spectrum.Icon.getCSSTypeSelector(type));
        this.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon.type = type;
        this.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon.toggle(this.appendSelector("-itemIndicator"), true);
        this.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon.setStyle("flex-shrink", 0);
        this.link.addElementAt(this.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon, 0);
        this.com_unhurdle_spectrum_renderers_TreeItemRenderer_chevronRightIcon.addEventListener(org.apache.royale.events.MouseEvent.CLICK, function(ev) {
          if (!self.disabled) {
            self.isOpen = !self.isOpen;
            var /** @type {org.apache.royale.events.ItemClickedEvent} */ expandEvent = new org.apache.royale.events.ItemClickedEvent("itemExpanded");
            expandEvent.data = self.data;
            expandEvent.index = self.index;
            setTimeout(function() {
              self.dispatchEvent(expandEvent);
            });
          }
        });
      }
      if (this.listData["isOpen"]) {
        this.isOpen = !!(value["isOpen"] = true);
      }
    }
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.isOpen;


com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.get__isOpen = function() {
  return this.com_unhurdle_spectrum_renderers_TreeItemRenderer__isOpen;
};


com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.set__isOpen = function(value) {
  this.com_unhurdle_spectrum_renderers_TreeItemRenderer__isOpen = value;
  this.toggle('is-open', value);
  this.com_unhurdle_spectrum_renderers_TreeItemRenderer_treeListData.isOpen = this.com_unhurdle_spectrum_renderers_TreeItemRenderer__isOpen;
};


com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.get__iconParent = function() {
  return this.link;
};


Object.defineProperties(com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype, /** @lends {com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype} */ {
/**
 * @type {Object}
 */
data: {
get: org.apache.royale.html.supportClasses.UIItemRendererBase.prototype.get__data,
set: com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.set__data},
/**
 * @type {boolean}
 */
isOpen: {
get: com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.get__isOpen,
set: com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.set__isOpen},
/**
 * @type {org.apache.royale.core.IParent}
 */
iconParent: {
get: com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.get__iconParent}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TreeItemRenderer', qName: 'com.unhurdle.spectrum.renderers.TreeItemRenderer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        '|indent': { type: 'Number', get_set: function (/** * */ v) {return v !== undefined ? com.unhurdle.spectrum.renderers.TreeItemRenderer.indent = v : com.unhurdle.spectrum.renderers.TreeItemRenderer.indent;}}
      };
    },
    accessors: function () {
      return {
        'data': { type: 'Object', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.renderers.TreeItemRenderer'},
        'isOpen': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.renderers.TreeItemRenderer'}
      };
    },
    methods: function () {
      return {
        'TreeItemRenderer': { type: '', declaredBy: 'com.unhurdle.spectrum.renderers.TreeItemRenderer'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.renderers.TreeItemRenderer.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.renderers.TreeItemRenderer);
