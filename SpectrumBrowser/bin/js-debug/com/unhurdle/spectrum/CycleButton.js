/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/CycleButton.as
 * com.unhurdle.spectrum.CycleButton
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.CycleButton');
/* Royale Dependency List: com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.const.IconPrefix,com.unhurdle.spectrum.includes.ActionButtonInclude,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.Event,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/cyclebutton/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.CycleButton = function() {
  com.unhurdle.spectrum.CycleButton.base(this, 'constructor');
  var /** @type {string} */ actionStr = com.unhurdle.spectrum.includes.ActionButtonInclude.getSelector();
  this.classList.add(actionStr);
  this.classList.add(actionStr + "--quiet");
};
goog.inherits(com.unhurdle.spectrum.CycleButton, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.CycleButton.prototype.getSelector = function() {
  return "spectrum-CycleButton";
};


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.CycleButton.prototype.com_unhurdle_spectrum_CycleButton_playIcon = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.CycleButton.prototype.com_unhurdle_spectrum_CycleButton_pauseIcon = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.CycleButton.prototype.getTag = function() {
  return "button";
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.CycleButton.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.CycleButton.superClass_.createElement.apply(this);
  this.com_unhurdle_spectrum_CycleButton_playIcon = new com.unhurdle.spectrum.Icon(com.unhurdle.spectrum.const.IconPrefix._18 + "PlayCircle");
  this.com_unhurdle_spectrum_CycleButton_playIcon.className = this.appendSelector("-item");
  this.com_unhurdle_spectrum_CycleButton_playIcon.toggle("is-selected", true);
  this.com_unhurdle_spectrum_CycleButton__paused = false;
  this.addElement(this.com_unhurdle_spectrum_CycleButton_playIcon);
  this.com_unhurdle_spectrum_CycleButton_pauseIcon = new com.unhurdle.spectrum.Icon(com.unhurdle.spectrum.const.IconPrefix._18 + "PauseCircle");
  this.com_unhurdle_spectrum_CycleButton_pauseIcon.className = this.appendSelector("-item");
  this.addElement(this.com_unhurdle_spectrum_CycleButton_pauseIcon);
  this.element.onclick = org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_CycleButton_handleClick, this, 'com_unhurdle_spectrum_CycleButton_handleClick');
  return elem;
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.CycleButton.prototype.com_unhurdle_spectrum_CycleButton__paused = false;


/**
 * @private
 * @param {*} ev
 */
com.unhurdle.spectrum.CycleButton.prototype.com_unhurdle_spectrum_CycleButton_handleClick = function(ev) {
  this.setPaused(!this.paused, true);
};


/**
 * @param {boolean} value
 * @param {boolean=} dispatch
 */
com.unhurdle.spectrum.CycleButton.prototype.setPaused = function(value, dispatch) {
  dispatch = typeof dispatch !== 'undefined' ? dispatch : false;
  this.com_unhurdle_spectrum_CycleButton_pauseIcon.toggle("is-selected", value);
  this.com_unhurdle_spectrum_CycleButton_playIcon.toggle("is-selected", !value);
  this.com_unhurdle_spectrum_CycleButton__paused = value;
  if (dispatch) {
    this.dispatchEvent(new org.apache.royale.events.Event("change"));
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.CycleButton.prototype.paused;


com.unhurdle.spectrum.CycleButton.prototype.get__paused = function() {
  return this.com_unhurdle_spectrum_CycleButton__paused;
};


com.unhurdle.spectrum.CycleButton.prototype.set__paused = function(value) {
  if (value != this.com_unhurdle_spectrum_CycleButton__paused) {
    this.setPaused(value);
  }
};


Object.defineProperties(com.unhurdle.spectrum.CycleButton.prototype, /** @lends {com.unhurdle.spectrum.CycleButton.prototype} */ {
/**
 * @type {boolean}
 */
paused: {
get: com.unhurdle.spectrum.CycleButton.prototype.get__paused,
set: com.unhurdle.spectrum.CycleButton.prototype.set__paused}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.CycleButton.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CycleButton', qName: 'com.unhurdle.spectrum.CycleButton', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.CycleButton.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'paused': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.CycleButton'}
      };
    },
    methods: function () {
      return {
        'CycleButton': { type: '', declaredBy: 'com.unhurdle.spectrum.CycleButton'},
        'setPaused': { type: 'void', declaredBy: 'com.unhurdle.spectrum.CycleButton', parameters: function () { return [ 'Boolean', false ,'Boolean', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.CycleButton.prototype.ROYALE_COMPILE_FLAGS = 11;
