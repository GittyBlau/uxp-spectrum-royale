/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/TabBar.as
 * com.unhurdle.spectrum.TabBar
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.TabBar');
/* Royale Dependency List: com.unhurdle.spectrum.Tab,com.unhurdle.spectrum.TabIndicator,com.unhurdle.spectrum.TabOverflow,com.unhurdle.spectrum.getTabsSelector,org.apache.royale.events.Event,org.apache.royale.utils.BrowserInfo,org.apache.royale.utils.sendStrandEvent,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.Group');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/tabs/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.Group}
 */
com.unhurdle.spectrum.TabBar = function() {
  com.unhurdle.spectrum.TabBar.base(this, 'constructor');
  this.com_unhurdle_spectrum_TabBar_tabOverflow = new com.unhurdle.spectrum.TabOverflow();
};
goog.inherits(com.unhurdle.spectrum.TabBar, com.unhurdle.spectrum.Group);


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__quiet = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__compact = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__vertical = false;


/**
 * @private
 * @type {com.unhurdle.spectrum.TabOverflow}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_tabOverflow = null;


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_tabWidth = NaN;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_hasDropdown = false;


/**
 * @private
 * @type {Array}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__tabs = null;


/**
 * @protected
 * @type {com.unhurdle.spectrum.TabIndicator}
 */
com.unhurdle.spectrum.TabBar.prototype.indicator = null;


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_count = 0;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.TabBar.prototype.getSelector = function() {
  return com.unhurdle.spectrum.getTabsSelector();
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.TabBar.prototype.appendSelector = function(value) {
  return this.getSelector() + value;
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.TabBar.prototype.loadBeads = function() {
  com.unhurdle.spectrum.TabBar.superClass_.loadBeads.apply(this);
  this.addBead(this.com_unhurdle_spectrum_TabBar_tabOverflow);
};


/**
 * @override
 */
com.unhurdle.spectrum.TabBar.prototype.addedToParent = function() {
  com.unhurdle.spectrum.TabBar.superClass_.addedToParent.apply(this);
  this.toggle(this.valueToSelector("horizontal"), !this.com_unhurdle_spectrum_TabBar__vertical);
  this.toggle(this.valueToSelector("vertical"), this.com_unhurdle_spectrum_TabBar__vertical);
  if (!this.com_unhurdle_spectrum_TabBar__collapsed) {
    requestAnimationFrame(org.apache.royale.utils.Language.closure(this.positionIndicator, this, 'positionIndicator'));
  }
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__autoCollapse = true;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__collapsed = false;


/**
 */
com.unhurdle.spectrum.TabBar.prototype.collapseTabs = function() {
  this.com_unhurdle_spectrum_TabBar_removeAllTabs();
  this.com_unhurdle_spectrum_TabBar_removeIndicator();
};


/**
 * @protected
 */
com.unhurdle.spectrum.TabBar.prototype.reAddTabs = function() {
  if (!this.tabs) {
    return;
  }
  for (var /** @type {number} */ i = 0; i < this.tabs.length; i++) {
    var /** @type {com.unhurdle.spectrum.Tab} */ tab = this.tabs[i];
    if (i == this.com_unhurdle_spectrum_TabBar__selectedIndex) {
      tab.selected = true;
    } else {
      tab.selected = false;
    }
    this.addElement(tab);
    tab.addEventListener("itemClicked", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabBar_itemClicked, this, 'com_unhurdle_spectrum_TabBar_itemClicked'));
  }
  this.positionIndicator();
};


/**
 * @private
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_removeAllTabs = function() {
  if (!this.com_unhurdle_spectrum_TabBar__tabs) {
    return;
  }
  for (var /** @type {number} */ i = 0; i < this.com_unhurdle_spectrum_TabBar__tabs.length; i++) {
    if (this.getElementIndex(this.com_unhurdle_spectrum_TabBar__tabs[i]) != -1) {
      this.removeElement(this.com_unhurdle_spectrum_TabBar__tabs[i]);
      this.tabs[i]["removeEventListener"]("itemClicked", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabBar_itemClicked, this, 'com_unhurdle_spectrum_TabBar_itemClicked'));
    }
  }
};


/**
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.animateChange = false;


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_itemClicked = function(ev) {
  var /** @type {com.unhurdle.spectrum.Tab} */ tab = ev.target;
  this.animateChange = org.apache.royale.utils.BrowserInfo.current().browser != "IE";
  this.selectedTab = tab;
  this.animateChange = false;
};


/**
 * @private
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_removeIndicator = function() {
  if (!this.indicator) {
    return;
  }
  if (this.getElementIndex(this.indicator) < 0) {
    return;
  }
  this.removeElement(this.indicator);
};


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__selectedIndex = -1;


/**
 * @protected
 * @param {boolean=} animate
 */
com.unhurdle.spectrum.TabBar.prototype.positionIndicator = function(animate) {
  var self = this;
  animate = typeof animate !== 'undefined' ? animate : false;
  var /** @type {com.unhurdle.spectrum.Tab} */ tab = this.selectedTab;
  if (!tab) {
    this.com_unhurdle_spectrum_TabBar_removeIndicator();
    return;
  }
  if (!this.indicator) {
    this.indicator = new com.unhurdle.spectrum.TabIndicator();
  }
  this.addElement(this.indicator);
  if (animate) {
    try {
      var /** @type {Array} */ keyframes = this.com_unhurdle_spectrum_TabBar_getKeyframes(tab);
      var /** @type {Animation} */ animation = this.indicator.element["animate"](keyframes, {"duration":150, "easing":"ease"});
      animation["onfinish"] = function() {
        self.com_unhurdle_spectrum_TabBar_setIndicatorStyle(tab);
      };
    } catch (err) {
      this.com_unhurdle_spectrum_TabBar_setIndicatorStyle(tab);
    }
  } else {
    this.com_unhurdle_spectrum_TabBar_setIndicatorStyle(tab);
  }
};


/**
 * @private
 * @param {com.unhurdle.spectrum.Tab} tab
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_setIndicatorStyle = function(tab) {
  if (this.vertical) {
    this.indicator.setStyle("left", "");
    this.indicator.setStyle("width", "");
    this.indicator.y = tab.y;
    this.indicator.height = tab.height;
  } else {
    this.indicator.setStyle("top", "");
    this.indicator.setStyle("height", "");
    this.indicator.x = tab.x;
    this.indicator.width = tab.width;
  }
};


/**
 * @private
 * @param {com.unhurdle.spectrum.Tab} tab
 * @return {Array}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar_getKeyframes = function(tab) {
  var /** @type {CSSStyleDeclaration} */ startStyle = getComputedStyle(this.indicator.element);
  var /** @type {Array} */ keyframes = [{"left":startStyle.left, "width":startStyle.width, "top":startStyle.top, "height":startStyle.height}];
  if (this.vertical) {
    keyframes.push({"left":"", "width":"", "top":tab.y + "px", "height":tab.height + "px"});
  } else {
    keyframes.push({"left":tab.x + "px", "width":tab.width + "px", "top":"", "height":""});
  }
  return keyframes;
};


/**
 * @private
 * @type {com.unhurdle.spectrum.Tab}
 */
com.unhurdle.spectrum.TabBar.prototype.com_unhurdle_spectrum_TabBar__selectedTab = null;


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.quiet;


com.unhurdle.spectrum.TabBar.prototype.get__quiet = function() {
  return this.com_unhurdle_spectrum_TabBar__quiet;
};


com.unhurdle.spectrum.TabBar.prototype.set__quiet = function(value) {
  if (value != !!this.com_unhurdle_spectrum_TabBar__quiet) {
    this.toggle(this.valueToSelector("quiet"), value);
  }
  this.com_unhurdle_spectrum_TabBar__quiet = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.compact;


com.unhurdle.spectrum.TabBar.prototype.get__compact = function() {
  return this.com_unhurdle_spectrum_TabBar__compact;
};


com.unhurdle.spectrum.TabBar.prototype.set__compact = function(value) {
  if (value != !!this.com_unhurdle_spectrum_TabBar__compact) {
    this.toggle(this.valueToSelector("compact"), value);
  }
  this.com_unhurdle_spectrum_TabBar__compact = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.vertical;


com.unhurdle.spectrum.TabBar.prototype.get__vertical = function() {
  return this.com_unhurdle_spectrum_TabBar__vertical;
};


com.unhurdle.spectrum.TabBar.prototype.set__vertical = function(value) {
  if (value != this.com_unhurdle_spectrum_TabBar__vertical) {
    this.toggle(this.valueToSelector("horizontal"), !value);
    this.toggle(this.valueToSelector("vertical"), value);
  }
  this.com_unhurdle_spectrum_TabBar__vertical = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.autoCollapse;


com.unhurdle.spectrum.TabBar.prototype.get__autoCollapse = function() {
  return this.com_unhurdle_spectrum_TabBar__autoCollapse;
};


com.unhurdle.spectrum.TabBar.prototype.set__autoCollapse = function(value) {
  if (this.com_unhurdle_spectrum_TabBar__autoCollapse != value) {
    this.dispatchEvent(new org.apache.royale.events.Event("autoCollapseChanged"));
  }
  this.com_unhurdle_spectrum_TabBar__autoCollapse = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TabBar.prototype.collapsed;


com.unhurdle.spectrum.TabBar.prototype.get__collapsed = function() {
  return this.com_unhurdle_spectrum_TabBar__collapsed;
};


com.unhurdle.spectrum.TabBar.prototype.set__collapsed = function(value) {
  if (this.com_unhurdle_spectrum_TabBar__collapsed == value) {
    return;
  }
  this.com_unhurdle_spectrum_TabBar__collapsed = value;
  if (value) {
    this.collapseTabs();
  } else {
    this.reAddTabs();
  }
  this.dispatchEvent(new org.apache.royale.events.Event("collapsed"));
};


/**
 * @nocollapse
 * @export
 * @type {Array}
 */
com.unhurdle.spectrum.TabBar.prototype.tabs;


com.unhurdle.spectrum.TabBar.prototype.get__tabs = function() {
  return this.com_unhurdle_spectrum_TabBar__tabs;
};


com.unhurdle.spectrum.TabBar.prototype.set__tabs = function(value) {
  this.com_unhurdle_spectrum_TabBar_removeAllTabs();
  this.com_unhurdle_spectrum_TabBar__tabs = value;
  if (!this.collapsed) {
    for (var /** @type {number} */ i = 0; i < value.length; i++) {
      this.addElement(value[i]);
      value[i]["addEventListener"]("itemClicked", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabBar_itemClicked, this, 'com_unhurdle_spectrum_TabBar_itemClicked'));
    }
  }
  org.apache.royale.utils.sendStrandEvent(this, "tabsChanged");
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.TabBar.prototype.selectedIndex;


com.unhurdle.spectrum.TabBar.prototype.get__selectedIndex = function() {
  return this.com_unhurdle_spectrum_TabBar__selectedIndex;
};


com.unhurdle.spectrum.TabBar.prototype.set__selectedIndex = function(value) {
  if (this.com_unhurdle_spectrum_TabBar__selectedIndex != value) {
    var /** @type {com.unhurdle.spectrum.Tab} */ tab = this.selectedTab;
    if (tab) {
      tab.selected = false;
    }
    this.com_unhurdle_spectrum_TabBar__selectedIndex = value;
    tab = this.selectedTab;
    if (tab) {
      tab.selected = true;
    }
    this.positionIndicator(this.animateChange);
    this.dispatchEvent(new org.apache.royale.events.Event("change"));
  }
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.Tab}
 */
com.unhurdle.spectrum.TabBar.prototype.selectedTab;


com.unhurdle.spectrum.TabBar.prototype.get__selectedTab = function() {
  if (this.tabs && this.tabs.length) {
    if (this.selectedIndex < 0 || this.selectedIndex >= this.tabs.length) {
      return null;
    }
    return this.tabs[this.selectedIndex];
  }
  return null;
};


com.unhurdle.spectrum.TabBar.prototype.set__selectedTab = function(value) {
  if (!this.tabs) {
    return;
  }
  var /** @type {number} */ index = (this.tabs.indexOf(value)) >> 0;
  if (index != -1) {
    this.selectedIndex = index;
  }
};


Object.defineProperties(com.unhurdle.spectrum.TabBar.prototype, /** @lends {com.unhurdle.spectrum.TabBar.prototype} */ {
/**
 * @type {boolean}
 */
quiet: {
get: com.unhurdle.spectrum.TabBar.prototype.get__quiet,
set: com.unhurdle.spectrum.TabBar.prototype.set__quiet},
/**
 * @type {boolean}
 */
compact: {
get: com.unhurdle.spectrum.TabBar.prototype.get__compact,
set: com.unhurdle.spectrum.TabBar.prototype.set__compact},
/**
 * @type {boolean}
 */
vertical: {
get: com.unhurdle.spectrum.TabBar.prototype.get__vertical,
set: com.unhurdle.spectrum.TabBar.prototype.set__vertical},
/**
 * @type {boolean}
 */
autoCollapse: {
get: com.unhurdle.spectrum.TabBar.prototype.get__autoCollapse,
set: com.unhurdle.spectrum.TabBar.prototype.set__autoCollapse},
/**
 * @type {boolean}
 */
collapsed: {
get: com.unhurdle.spectrum.TabBar.prototype.get__collapsed,
set: com.unhurdle.spectrum.TabBar.prototype.set__collapsed},
/**
 * @type {Array}
 */
tabs: {
get: com.unhurdle.spectrum.TabBar.prototype.get__tabs,
set: com.unhurdle.spectrum.TabBar.prototype.set__tabs},
/**
 * @type {number}
 */
selectedIndex: {
get: com.unhurdle.spectrum.TabBar.prototype.get__selectedIndex,
set: com.unhurdle.spectrum.TabBar.prototype.set__selectedIndex},
/**
 * @type {com.unhurdle.spectrum.Tab}
 */
selectedTab: {
get: com.unhurdle.spectrum.TabBar.prototype.get__selectedTab,
set: com.unhurdle.spectrum.TabBar.prototype.set__selectedTab}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.TabBar.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TabBar', qName: 'com.unhurdle.spectrum.TabBar', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.TabBar.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'animateChange': { type: 'Boolean', get_set: function (/** com.unhurdle.spectrum.TabBar */ inst, /** * */ v) {return v !== undefined ? inst.animateChange = v : inst.animateChange;}}
      };
    },
    accessors: function () {
      return {
        'quiet': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'compact': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'vertical': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'autoCollapse': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'collapsed': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'tabs': { type: 'Array', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'selectedIndex': { type: 'int', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'selectedTab': { type: 'com.unhurdle.spectrum.Tab', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TabBar'}
      };
    },
    methods: function () {
      return {
        'TabBar': { type: '', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'addedToParent': { type: 'void', declaredBy: 'com.unhurdle.spectrum.TabBar'},
        'collapseTabs': { type: 'void', declaredBy: 'com.unhurdle.spectrum.TabBar'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.TabBar.prototype.ROYALE_COMPILE_FLAGS = 11;
