/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Tag.as
 * com.unhurdle.spectrum.Tag
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Tag');
/* Royale Dependency List: com.unhurdle.spectrum.Avatar,com.unhurdle.spectrum.ClearButton,com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.TextNode,com.unhurdle.spectrum.newElement,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.Tag = function() {
  com.unhurdle.spectrum.Tag.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.Tag, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Tag.prototype.getSelector = function() {
  return "spectrum-Tags-item";
};


/**
 * @private
 * @type {com.unhurdle.spectrum.TextNode}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag_span = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Tag.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.Tag.superClass_.createElement.apply(this);
  this.com_unhurdle_spectrum_Tag_span = new com.unhurdle.spectrum.TextNode("");
  this.com_unhurdle_spectrum_Tag_span.element = com.unhurdle.spectrum.newElement("span");
  this.com_unhurdle_spectrum_Tag_span.className = "spectrum-Tags-itemLabel";
  elem.appendChild(this.com_unhurdle_spectrum_Tag_span.element);
  this.com_unhurdle_spectrum_Tag_clearButton = new com.unhurdle.spectrum.ClearButton();
  this.com_unhurdle_spectrum_Tag_clearButton.small = true;
  this.com_unhurdle_spectrum_Tag_clearButton.visible = false;
  this.addElement(this.com_unhurdle_spectrum_Tag_clearButton);
  this.com_unhurdle_spectrum_Tag_clearButton.addEventListener("click", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Tag_removeTag, this, 'com_unhurdle_spectrum_Tag_removeTag'));
  return elem;
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__small = false;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__text = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__src = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Avatar}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag_imageElement = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__icon = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag_iconElement = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__isDisabled = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__invalid = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__deletable = false;


/**
 * @private
 * @type {com.unhurdle.spectrum.ClearButton}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag_clearButton = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag__interactive = true;


/**
 * @private
 */
com.unhurdle.spectrum.Tag.prototype.com_unhurdle_spectrum_Tag_removeTag = function() {
  this.parent.removeElement(this);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.small;


com.unhurdle.spectrum.Tag.prototype.get__small = function() {
  return this.com_unhurdle_spectrum_Tag__small;
};


com.unhurdle.spectrum.Tag.prototype.set__small = function(value) {
  this.com_unhurdle_spectrum_Tag__small = value;
  if (value) {
    this.height = 17;
    this.com_unhurdle_spectrum_Tag_span.element.style.lineHeight = 1.2;
  } else {
    this.com_unhurdle_spectrum_Tag_span.element.style.lineHeight = '';
    this.style["height"] = '';
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Tag.prototype.text;


com.unhurdle.spectrum.Tag.prototype.get__text = function() {
  return this.com_unhurdle_spectrum_Tag__text;
};


com.unhurdle.spectrum.Tag.prototype.set__text = function(value) {
  this.com_unhurdle_spectrum_Tag__text = value;
  this.com_unhurdle_spectrum_Tag_span.text = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Tag.prototype.src;


com.unhurdle.spectrum.Tag.prototype.get__src = function() {
  return this.com_unhurdle_spectrum_Tag__src;
};


com.unhurdle.spectrum.Tag.prototype.set__src = function(value) {
  if (value == this.com_unhurdle_spectrum_Tag__src) {
    return;
  }
  var /** @type {HTMLElement} */ elem = this.element;
  if (value) {
    if (!this.com_unhurdle_spectrum_Tag_imageElement) {
      this.com_unhurdle_spectrum_Tag_imageElement = new com.unhurdle.spectrum.Avatar();
      this.addElementAt(this.com_unhurdle_spectrum_Tag_imageElement, 0);
    }
    this.com_unhurdle_spectrum_Tag_imageElement.src = value;
  }
  this.com_unhurdle_spectrum_Tag__src = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Tag.prototype.icon;


com.unhurdle.spectrum.Tag.prototype.get__icon = function() {
  return this.com_unhurdle_spectrum_Tag__icon;
};


com.unhurdle.spectrum.Tag.prototype.set__icon = function(value) {
  this.com_unhurdle_spectrum_Tag__icon = value;
  if (this.com_unhurdle_spectrum_Tag_iconElement) {
    this.com_unhurdle_spectrum_Tag_iconElement.selector = value;
    this.com_unhurdle_spectrum_Tag_iconElement.size = 'XS';
  } else {
    this.com_unhurdle_spectrum_Tag_iconElement = new com.unhurdle.spectrum.Icon(value);
    this.com_unhurdle_spectrum_Tag_iconElement.size = 'XS';
    this.addElementAt(this.com_unhurdle_spectrum_Tag_iconElement, 0);
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.isDisabled;


com.unhurdle.spectrum.Tag.prototype.get__isDisabled = function() {
  return this.com_unhurdle_spectrum_Tag__isDisabled;
};


com.unhurdle.spectrum.Tag.prototype.set__isDisabled = function(value) {
  if (value != !!this.com_unhurdle_spectrum_Tag__isDisabled) {
    this.toggle("is-disabled", value);
  }
  this.com_unhurdle_spectrum_Tag__isDisabled = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.invalid;


com.unhurdle.spectrum.Tag.prototype.get__invalid = function() {
  return this.com_unhurdle_spectrum_Tag__invalid;
};


com.unhurdle.spectrum.Tag.prototype.set__invalid = function(value) {
  if (value != !!this.com_unhurdle_spectrum_Tag__invalid) {
    this.toggle("is-invalid", value);
  }
  this.com_unhurdle_spectrum_Tag__invalid = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.deletable;


com.unhurdle.spectrum.Tag.prototype.get__deletable = function() {
  return this.com_unhurdle_spectrum_Tag__deletable;
};


com.unhurdle.spectrum.Tag.prototype.set__deletable = function(value) {
  if (value != !!this.com_unhurdle_spectrum_Tag__deletable) {
    this.toggle(this.valueToSelector("deletable"), value);
    if (value) {
      this.com_unhurdle_spectrum_Tag_clearButton.visible = true;
    } else {
      this.com_unhurdle_spectrum_Tag_clearButton.visible = false;
    }
  }
  this.com_unhurdle_spectrum_Tag__deletable = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tag.prototype.interactive;


com.unhurdle.spectrum.Tag.prototype.get__interactive = function() {
  return this.com_unhurdle_spectrum_Tag__interactive;
};


com.unhurdle.spectrum.Tag.prototype.set__interactive = function(value) {
  this.com_unhurdle_spectrum_Tag__interactive = value;
  this.element.style.pointerEvents = org.apache.royale.utils.Language.string(value ? null : "none");
};


Object.defineProperties(com.unhurdle.spectrum.Tag.prototype, /** @lends {com.unhurdle.spectrum.Tag.prototype} */ {
/**
 * @type {boolean}
 */
small: {
get: com.unhurdle.spectrum.Tag.prototype.get__small,
set: com.unhurdle.spectrum.Tag.prototype.set__small},
/**
 * @type {string}
 */
text: {
get: com.unhurdle.spectrum.Tag.prototype.get__text,
set: com.unhurdle.spectrum.Tag.prototype.set__text},
/**
 * @type {string}
 */
src: {
get: com.unhurdle.spectrum.Tag.prototype.get__src,
set: com.unhurdle.spectrum.Tag.prototype.set__src},
/**
 * @type {string}
 */
icon: {
get: com.unhurdle.spectrum.Tag.prototype.get__icon,
set: com.unhurdle.spectrum.Tag.prototype.set__icon},
/**
 * @type {boolean}
 */
isDisabled: {
get: com.unhurdle.spectrum.Tag.prototype.get__isDisabled,
set: com.unhurdle.spectrum.Tag.prototype.set__isDisabled},
/**
 * @type {boolean}
 */
invalid: {
get: com.unhurdle.spectrum.Tag.prototype.get__invalid,
set: com.unhurdle.spectrum.Tag.prototype.set__invalid},
/**
 * @type {boolean}
 */
deletable: {
get: com.unhurdle.spectrum.Tag.prototype.get__deletable,
set: com.unhurdle.spectrum.Tag.prototype.set__deletable},
/**
 * @type {boolean}
 */
interactive: {
get: com.unhurdle.spectrum.Tag.prototype.get__interactive,
set: com.unhurdle.spectrum.Tag.prototype.set__interactive}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Tag.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Tag', qName: 'com.unhurdle.spectrum.Tag', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Tag.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'small': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'},
        'text': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'},
        'src': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'},
        'icon': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'},
        'isDisabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'},
        'invalid': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'},
        'deletable': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'},
        'interactive': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tag'}
      };
    },
    methods: function () {
      return {
        'Tag': { type: '', declaredBy: 'com.unhurdle.spectrum.Tag'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Tag.prototype.ROYALE_COMPILE_FLAGS = 11;
