/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/ActionBar.as
 * com.unhurdle.spectrum.ActionBar
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.ActionBar');
/* Royale Dependency List: com.unhurdle.spectrum.CheckBox,com.unhurdle.spectrum.Popover,org.apache.royale.core.IChild,org.apache.royale.core.WrappedHTMLElement*/

goog.require('com.unhurdle.spectrum.Group');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.Group}
 */
com.unhurdle.spectrum.ActionBar = function() {
  com.unhurdle.spectrum.ActionBar.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.ActionBar, com.unhurdle.spectrum.Group);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.ActionBar.prototype.getSelector = function() {
  return "spectrum-ActionBar";
};


/**
 * @private
 * @type {com.unhurdle.spectrum.CheckBox}
 */
com.unhurdle.spectrum.ActionBar.prototype.com_unhurdle_spectrum_ActionBar_checkBox = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Popover}
 */
com.unhurdle.spectrum.ActionBar.prototype.com_unhurdle_spectrum_ActionBar_popover = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.ActionBar.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.ActionBar.superClass_.createElement.apply(this);
  this.com_unhurdle_spectrum_ActionBar_popover = new com.unhurdle.spectrum.Popover();
  this.com_unhurdle_spectrum_ActionBar_popover.className = this.appendSelector("-popover");
  this.com_unhurdle_spectrum_ActionBar_popover.element.style.position = "relative";
  this.com_unhurdle_spectrum_ActionBar_checkBox = new com.unhurdle.spectrum.CheckBox();
  this.com_unhurdle_spectrum_ActionBar_checkBox.indeterminate = true;
  this.com_unhurdle_spectrum_ActionBar_popover.addElement(this.com_unhurdle_spectrum_ActionBar_checkBox);
  elem.appendChild(this.com_unhurdle_spectrum_ActionBar_popover.element);
  return elem;
};


/**
 * @override
 */
com.unhurdle.spectrum.ActionBar.prototype.addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.com_unhurdle_spectrum_ActionBar_popover.addElement(c, dispatchEvent);
};


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.ActionBar.prototype.com_unhurdle_spectrum_ActionBar__countSelected = NaN;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.ActionBar.prototype.com_unhurdle_spectrum_ActionBar__flexible = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.ActionBar.prototype.com_unhurdle_spectrum_ActionBar__sticky = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.ActionBar.prototype.com_unhurdle_spectrum_ActionBar__isOpen = false;


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.ActionBar.prototype.countSelected;


com.unhurdle.spectrum.ActionBar.prototype.get__countSelected = function() {
  return this.com_unhurdle_spectrum_ActionBar__countSelected;
};


com.unhurdle.spectrum.ActionBar.prototype.set__countSelected = function(value) {
  if (value != this.com_unhurdle_spectrum_ActionBar__countSelected) {
    this.com_unhurdle_spectrum_ActionBar_checkBox.text = value + " Selected";
  }
  this.com_unhurdle_spectrum_ActionBar__countSelected = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.ActionBar.prototype.flexible;


com.unhurdle.spectrum.ActionBar.prototype.get__flexible = function() {
  return this.com_unhurdle_spectrum_ActionBar__flexible;
};


com.unhurdle.spectrum.ActionBar.prototype.set__flexible = function(value) {
  if (value != this.com_unhurdle_spectrum_ActionBar__flexible) {
    this.toggle(this.valueToSelector("flexible"), value);
  }
  this.com_unhurdle_spectrum_ActionBar__flexible = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.ActionBar.prototype.sticky;


com.unhurdle.spectrum.ActionBar.prototype.get__sticky = function() {
  return this.com_unhurdle_spectrum_ActionBar__sticky;
};


com.unhurdle.spectrum.ActionBar.prototype.set__sticky = function(value) {
  if (value != this.com_unhurdle_spectrum_ActionBar__sticky) {
    this.toggle(this.valueToSelector("sticky"), value);
  }
  this.com_unhurdle_spectrum_ActionBar__sticky = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.ActionBar.prototype.isOpen;


com.unhurdle.spectrum.ActionBar.prototype.get__isOpen = function() {
  return this.com_unhurdle_spectrum_ActionBar__isOpen;
};


com.unhurdle.spectrum.ActionBar.prototype.set__isOpen = function(value) {
  if (value != this.com_unhurdle_spectrum_ActionBar__isOpen) {
    this.toggle("is-open", value);
    this.com_unhurdle_spectrum_ActionBar_popover.open = value;
  }
  this.com_unhurdle_spectrum_ActionBar__isOpen = value;
};


Object.defineProperties(com.unhurdle.spectrum.ActionBar.prototype, /** @lends {com.unhurdle.spectrum.ActionBar.prototype} */ {
/**
 * @type {number}
 */
countSelected: {
get: com.unhurdle.spectrum.ActionBar.prototype.get__countSelected,
set: com.unhurdle.spectrum.ActionBar.prototype.set__countSelected},
/**
 * @type {boolean}
 */
flexible: {
get: com.unhurdle.spectrum.ActionBar.prototype.get__flexible,
set: com.unhurdle.spectrum.ActionBar.prototype.set__flexible},
/**
 * @type {boolean}
 */
sticky: {
get: com.unhurdle.spectrum.ActionBar.prototype.get__sticky,
set: com.unhurdle.spectrum.ActionBar.prototype.set__sticky},
/**
 * @type {boolean}
 */
isOpen: {
get: com.unhurdle.spectrum.ActionBar.prototype.get__isOpen,
set: com.unhurdle.spectrum.ActionBar.prototype.set__isOpen}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.ActionBar.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ActionBar', qName: 'com.unhurdle.spectrum.ActionBar', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.ActionBar.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'countSelected': { type: 'Number', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ActionBar'},
        'flexible': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ActionBar'},
        'sticky': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ActionBar'},
        'isOpen': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ActionBar'}
      };
    },
    methods: function () {
      return {
        'ActionBar': { type: '', declaredBy: 'com.unhurdle.spectrum.ActionBar'},
        'addElement': { type: 'void', declaredBy: 'com.unhurdle.spectrum.ActionBar', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.ActionBar.prototype.ROYALE_COMPILE_FLAGS = 11;
