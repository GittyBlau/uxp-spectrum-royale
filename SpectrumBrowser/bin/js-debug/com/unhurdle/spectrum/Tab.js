/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Tab.as
 * com.unhurdle.spectrum.Tab
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Tab');
/* Royale Dependency List: com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.TextNode,com.unhurdle.spectrum.getTabsSelector,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.Event,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.Tab = function() {
  com.unhurdle.spectrum.Tab.base(this, 'constructor');
  this.addEventListener('click', org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Tab_onClick, this, 'com_unhurdle_spectrum_Tab_onClick'));
};
goog.inherits(com.unhurdle.spectrum.Tab, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Tab.prototype.getSelector = function() {
  return com.unhurdle.spectrum.getTabsSelector() + "-item";
};


/**
 * @private
 * @type {com.unhurdle.spectrum.TextNode}
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab_label = null;


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab_overflowButton = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab_overflowIcon = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab__text = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab__icon = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab_iconElement = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab__selected = false;


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.Tab.prototype.com_unhurdle_spectrum_Tab_onClick = function(ev) {
  this.dispatchEvent(new org.apache.royale.events.Event("itemClicked"));
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Tab.prototype.createElement = function() {
  com.unhurdle.spectrum.Tab.superClass_.createElement.apply(this);
  this.com_unhurdle_spectrum_Tab_label = new com.unhurdle.spectrum.TextNode("label");
  this.com_unhurdle_spectrum_Tab_label.className = com.unhurdle.spectrum.getTabsSelector() + "-itemLabel";
  this.com_unhurdle_spectrum_Tab_label.element.style.userSelect = "none";
  this.com_unhurdle_spectrum_Tab_label.element.style.webkitUserSelect = "none";
  this.com_unhurdle_spectrum_Tab_label.element.style.MsUserSelect = "none";
  this.element.appendChild(this.com_unhurdle_spectrum_Tab_label.element);
  this.element.tabIndex = 0;
  return this.element;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Tab.prototype.text;


com.unhurdle.spectrum.Tab.prototype.get__text = function() {
  return this.com_unhurdle_spectrum_Tab__text;
};


com.unhurdle.spectrum.Tab.prototype.set__text = function(value) {
  this.com_unhurdle_spectrum_Tab__text = value;
  this.com_unhurdle_spectrum_Tab_label.text = this.com_unhurdle_spectrum_Tab__text;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Tab.prototype.icon;


com.unhurdle.spectrum.Tab.prototype.get__icon = function() {
  return this.com_unhurdle_spectrum_Tab__icon;
};


com.unhurdle.spectrum.Tab.prototype.set__icon = function(value) {
  this.com_unhurdle_spectrum_Tab__icon = value;
  if (this.com_unhurdle_spectrum_Tab_iconElement) {
    this.com_unhurdle_spectrum_Tab_iconElement.selector = value;
    this.com_unhurdle_spectrum_Tab_iconElement.size = 'S';
  } else {
    this.com_unhurdle_spectrum_Tab_iconElement = new com.unhurdle.spectrum.Icon(value);
    this.com_unhurdle_spectrum_Tab_iconElement.size = 'S';
    this.addElementAt(this.com_unhurdle_spectrum_Tab_iconElement, 0);
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tab.prototype.selected;


com.unhurdle.spectrum.Tab.prototype.get__selected = function() {
  return this.com_unhurdle_spectrum_Tab__selected;
};


com.unhurdle.spectrum.Tab.prototype.set__selected = function(value) {
  this.toggle("is-selected", value);
  this.com_unhurdle_spectrum_Tab__selected = value;
};


Object.defineProperties(com.unhurdle.spectrum.Tab.prototype, /** @lends {com.unhurdle.spectrum.Tab.prototype} */ {
/**
 * @type {string}
 */
text: {
get: com.unhurdle.spectrum.Tab.prototype.get__text,
set: com.unhurdle.spectrum.Tab.prototype.set__text},
/**
 * @type {string}
 */
icon: {
get: com.unhurdle.spectrum.Tab.prototype.get__icon,
set: com.unhurdle.spectrum.Tab.prototype.set__icon},
/**
 * @type {boolean}
 */
selected: {
get: com.unhurdle.spectrum.Tab.prototype.get__selected,
set: com.unhurdle.spectrum.Tab.prototype.set__selected}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Tab.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Tab', qName: 'com.unhurdle.spectrum.Tab', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Tab.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'text': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tab'},
        'icon': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tab'},
        'selected': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tab'}
      };
    },
    methods: function () {
      return {
        'Tab': { type: '', declaredBy: 'com.unhurdle.spectrum.Tab'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Tab.prototype.ROYALE_COMPILE_FLAGS = 11;
