/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/typography/Detail.as
 * com.unhurdle.spectrum.typography.Detail
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.typography.Detail');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.typography.Typography');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.typography.Typography}
 */
com.unhurdle.spectrum.typography.Detail = function() {
  com.unhurdle.spectrum.typography.Detail.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.typography.Detail, com.unhurdle.spectrum.typography.Typography);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.typography.Detail.prototype.getSelector = function() {
  return "spectrum-Detail";
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.typography.Detail.prototype.getSizes = function() {
  return ["S", "M", "L", "XL"];
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Detail.prototype.com_unhurdle_spectrum_typography_Detail__light = false;


com.unhurdle.spectrum.typography.Detail.prototype.set__size = function(value) {
  com.unhurdle.spectrum.typography.Detail.superClass_.set__size.apply(this, [ value] );
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Detail.prototype.light;


com.unhurdle.spectrum.typography.Detail.prototype.get__light = function() {
  return this.com_unhurdle_spectrum_typography_Detail__light;
};


com.unhurdle.spectrum.typography.Detail.prototype.set__light = function(value) {
  if (value != !!this.com_unhurdle_spectrum_typography_Detail__light) {
    this.toggle(this.valueToSelector("light"), value);
  }
  this.com_unhurdle_spectrum_typography_Detail__light = value;
};


Object.defineProperties(com.unhurdle.spectrum.typography.Detail.prototype, /** @lends {com.unhurdle.spectrum.typography.Detail.prototype} */ {
/**
 * @type {string}
 */
size: {
get: com.unhurdle.spectrum.typography.Typography.prototype.get__size,
set: com.unhurdle.spectrum.typography.Detail.prototype.set__size},
/**
 * @type {boolean}
 */
light: {
get: com.unhurdle.spectrum.typography.Detail.prototype.get__light,
set: com.unhurdle.spectrum.typography.Detail.prototype.set__light}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.typography.Detail.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Detail', qName: 'com.unhurdle.spectrum.typography.Detail', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.typography.Detail.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'size': { type: 'String', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.typography.Detail'},
        'light': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.typography.Detail'}
      };
    },
    methods: function () {
      return {
        'Detail': { type: '', declaredBy: 'com.unhurdle.spectrum.typography.Detail'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.typography.Detail.prototype.ROYALE_COMPILE_FLAGS = 11;
