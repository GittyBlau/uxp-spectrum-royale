/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/data/MillerColumnsItem.as
 * com.unhurdle.spectrum.data.MillerColumnsItem
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.data.MillerColumnsItem');
/* Royale Dependency List: com.unhurdle.spectrum.AssetList,org.apache.royale.events.ValueEvent,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 * @param {Object} obj
 */
com.unhurdle.spectrum.data.MillerColumnsItem = function(obj) {
  com.unhurdle.spectrum.data.MillerColumnsItem.base(this, 'constructor');
  this.com_unhurdle_spectrum_data_MillerColumnsItem_object = obj;
  this.com_unhurdle_spectrum_data_MillerColumnsItem_assetList = new com.unhurdle.spectrum.AssetList();
  this.com_unhurdle_spectrum_data_MillerColumnsItem_assetList.dataProvider = obj;
  this.com_unhurdle_spectrum_data_MillerColumnsItem_assetList.addEventListener("itemClicked", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_data_MillerColumnsItem_itemClicked, this, 'com_unhurdle_spectrum_data_MillerColumnsItem_itemClicked'));
  this.addElement(this.com_unhurdle_spectrum_data_MillerColumnsItem_assetList);
  this.typeNames = 'spectrum-MillerColumns-item';
};
goog.inherits(com.unhurdle.spectrum.data.MillerColumnsItem, com.unhurdle.spectrum.SpectrumBase);


/**
 * @private
 * @type {com.unhurdle.spectrum.AssetList}
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.com_unhurdle_spectrum_data_MillerColumnsItem_assetList = null;


/**
 * @private
 * @type {Object}
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.com_unhurdle_spectrum_data_MillerColumnsItem_object = null;


/**
 * @private
 * @param {org.apache.royale.events.ValueEvent} ev
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.com_unhurdle_spectrum_data_MillerColumnsItem_itemClicked = function(ev) {
  if (ev.value["isOpen"]) {
    return;
  }
  var foreachiter0_target = this.com_unhurdle_spectrum_data_MillerColumnsItem_assetList.dataProvider;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var item = foreachiter0_target[foreachiter0];
  {
    if (item["selected"]) {
      this.com_unhurdle_spectrum_data_MillerColumnsItem_checkChild(item, ev);
      return;
    }
  }}
  
  if (ev.value["children"]) {
    ev.value["isOpen"] = true;
    var /** @type {com.unhurdle.spectrum.data.MillerColumnsItem} */ newElem = new com.unhurdle.spectrum.data.MillerColumnsItem(ev.value["children"]);
    this.parent.addElement(newElem);
  }
  ev.value["selected"] = true;
};


/**
 * @private
 * @param {Object} item
 * @param {org.apache.royale.events.ValueEvent} ev
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.com_unhurdle_spectrum_data_MillerColumnsItem_checkChild = function(item, ev) {
  var foreachiter1_target = ev.target["dataProvider"];
  for (var foreachiter1 in foreachiter1_target) 
  {
  var c = foreachiter1_target[foreachiter1];
  {
    if (c["isOpen"]) {
      for (var /** @type {number} */ k = (this.element.parentElement.children.length - 1) >> 0; k > 0; k--) {
        if (ev.target["element"] != this.element.parentElement.children[k]["children"][0]) {
          this.parent.removeElement(this.element.parentElement.children[k]["royale_wrapper"]);
        }
      }
      this.com_unhurdle_spectrum_data_MillerColumnsItem_toFalse(c);
    }
    if (ev.value == item) {
      if (item["isOpen"] == false) {
        this.com_unhurdle_spectrum_data_MillerColumnsItem_reOpen(item);
        break;
      }
    }
  }}
  
};


/**
 * @private
 * @param {Object} item
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.com_unhurdle_spectrum_data_MillerColumnsItem_reOpen = function(item) {
  item["isOpen"] = true;
  var /** @type {com.unhurdle.spectrum.data.MillerColumnsItem} */ newElem = new com.unhurdle.spectrum.data.MillerColumnsItem(item["children"]);
  this.parent.addElement(newElem);
  item["selected"] = true;
};


/**
 * @private
 * @param {Object} c
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.com_unhurdle_spectrum_data_MillerColumnsItem_toFalse = function(c) {
  if (c["isOpen"]) {
    c["isOpen"] = false;
  }
  if (c["children"]) {
    var foreachiter2_target = c["children"];
    for (var foreachiter2 in foreachiter2_target) 
    {
    var child = foreachiter2_target[foreachiter2];
    {
      this.com_unhurdle_spectrum_data_MillerColumnsItem_toFalse(child);
    }}
    
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MillerColumnsItem', qName: 'com.unhurdle.spectrum.data.MillerColumnsItem', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'MillerColumnsItem': { type: '', declaredBy: 'com.unhurdle.spectrum.data.MillerColumnsItem', parameters: function () { return [ 'Object', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.data.MillerColumnsItem.prototype.ROYALE_COMPILE_FLAGS = 11;
