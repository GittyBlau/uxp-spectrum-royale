/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/CoachMark.as
 * com.unhurdle.spectrum.CoachMark
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.CoachMark');
/* Royale Dependency List: com.unhurdle.spectrum.newElement,org.apache.royale.core.WrappedHTMLElement*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/coachmark/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.CoachMark = function() {
  com.unhurdle.spectrum.CoachMark.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.CoachMark, com.unhurdle.spectrum.SpectrumBase);


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.CoachMark.DARK = "dark";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.CoachMark.LIGHT = "light";


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.CoachMark.prototype.getSelector = function() {
  return "spectrum-CoachMarkIndicator";
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.CoachMark.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.CoachMark.superClass_.createElement.apply(this);
  for (var /** @type {number} */ i = 0; i < 3; i++) {
    elem.appendChild(com.unhurdle.spectrum.newElement("div", this.appendSelector("-ring")));
  }
  return elem;
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.CoachMark.prototype.com_unhurdle_spectrum_CoachMark__isAbsolute = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.CoachMark.prototype.com_unhurdle_spectrum_CoachMark__quiet = false;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.CoachMark.prototype.com_unhurdle_spectrum_CoachMark__flavor = null;


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.CoachMark.prototype.isAbsolute;


com.unhurdle.spectrum.CoachMark.prototype.get__isAbsolute = function() {
  return this.com_unhurdle_spectrum_CoachMark__isAbsolute;
};


com.unhurdle.spectrum.CoachMark.prototype.set__isAbsolute = function(value) {
  this.com_unhurdle_spectrum_CoachMark__isAbsolute = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.CoachMark.prototype.quiet;


com.unhurdle.spectrum.CoachMark.prototype.get__quiet = function() {
  return this.com_unhurdle_spectrum_CoachMark__quiet;
};


com.unhurdle.spectrum.CoachMark.prototype.set__quiet = function(value) {
  if (value != !!this.com_unhurdle_spectrum_CoachMark__quiet) {
    this.toggle(this.valueToSelector("quiet"), value);
  }
  this.com_unhurdle_spectrum_CoachMark__quiet = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.CoachMark.prototype.flavor;


com.unhurdle.spectrum.CoachMark.prototype.get__flavor = function() {
  return this.com_unhurdle_spectrum_CoachMark__flavor;
};


com.unhurdle.spectrum.CoachMark.prototype.set__flavor = function(value) {
  if (value != this.com_unhurdle_spectrum_CoachMark__flavor) {
    switch (value) {
      case "dark":
      
      case "light":
      
      case "default":
      
      case "":
        break;
      default:
        throw new Error("Invalid flavor: " + value);
    }
    if (this.com_unhurdle_spectrum_CoachMark__flavor) {
      var /** @type {string} */ oldFlavor = this.valueToSelector(this.com_unhurdle_spectrum_CoachMark__flavor);
      this.toggle(oldFlavor, false);
    }
    if (value && value != "default") {
      var /** @type {string} */ newFlavor = this.valueToSelector(value);
      this.toggle(newFlavor, true);
    }
    this.com_unhurdle_spectrum_CoachMark__flavor = value;
  }
};


Object.defineProperties(com.unhurdle.spectrum.CoachMark.prototype, /** @lends {com.unhurdle.spectrum.CoachMark.prototype} */ {
/**
 * @type {boolean}
 */
isAbsolute: {
get: com.unhurdle.spectrum.CoachMark.prototype.get__isAbsolute,
set: com.unhurdle.spectrum.CoachMark.prototype.set__isAbsolute},
/**
 * @type {boolean}
 */
quiet: {
get: com.unhurdle.spectrum.CoachMark.prototype.get__quiet,
set: com.unhurdle.spectrum.CoachMark.prototype.set__quiet},
/**
 * @type {string}
 */
flavor: {
get: com.unhurdle.spectrum.CoachMark.prototype.get__flavor,
set: com.unhurdle.spectrum.CoachMark.prototype.set__flavor}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.CoachMark.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CoachMark', qName: 'com.unhurdle.spectrum.CoachMark', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.CoachMark.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'isAbsolute': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.CoachMark'},
        'quiet': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.CoachMark'},
        'flavor': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.CoachMark'}
      };
    },
    methods: function () {
      return {
        'CoachMark': { type: '', declaredBy: 'com.unhurdle.spectrum.CoachMark'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.CoachMark.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.CoachMark.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.CoachMark);
