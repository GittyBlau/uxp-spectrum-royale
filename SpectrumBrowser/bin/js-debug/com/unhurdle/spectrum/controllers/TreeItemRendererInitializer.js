/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/controllers/TreeItemRendererInitializer.as
 * com.unhurdle.spectrum.controllers.TreeItemRendererInitializer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.controllers.TreeItemRendererInitializer');
/* Royale Dependency List: org.apache.royale.collections.TreeData,org.apache.royale.core.IIndexedItemRenderer,org.apache.royale.core.IListDataItemRenderer,org.apache.royale.html.supportClasses.TreeListData*/

goog.require('org.apache.royale.html.beads.IndexedItemRendererInitializer');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.html.beads.IndexedItemRendererInitializer}
 */
com.unhurdle.spectrum.controllers.TreeItemRendererInitializer = function() {
  com.unhurdle.spectrum.controllers.TreeItemRendererInitializer.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.controllers.TreeItemRendererInitializer, org.apache.royale.html.beads.IndexedItemRendererInitializer);


/**
 *  @asprivate
 *  @royaleignorecoercion org.apache.royale.core.HTMLElementWrapper
 * @override
 */
com.unhurdle.spectrum.controllers.TreeItemRendererInitializer.prototype.initializeIndexedItemRenderer = function(ir, data, index) {
  if (!this.dataProviderModel)
    return;
  com.unhurdle.spectrum.controllers.TreeItemRendererInitializer.superClass_.initializeIndexedItemRenderer.apply(this, [ ir, data, index] );
  var /** @type {org.apache.royale.collections.TreeData} */ treeData = this.dataProviderModel.dataProvider;
  var /** @type {number} */ depth = treeData.getDepth(data);
  var /** @type {boolean} */ isOpen = treeData.isOpen(data);
  var /** @type {boolean} */ hasChildren = treeData.hasChildren(data);
  var /** @type {org.apache.royale.html.supportClasses.TreeListData} */ treeListData = new org.apache.royale.html.supportClasses.TreeListData();
  treeListData.depth = depth;
  treeListData.isOpen = isOpen;
  treeListData.hasChildren = hasChildren;
  ir.listData = treeListData;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.controllers.TreeItemRendererInitializer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TreeItemRendererInitializer', qName: 'com.unhurdle.spectrum.controllers.TreeItemRendererInitializer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.controllers.TreeItemRendererInitializer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'TreeItemRendererInitializer': { type: '', declaredBy: 'com.unhurdle.spectrum.controllers.TreeItemRendererInitializer'},
        'initializeIndexedItemRenderer': { type: 'void', declaredBy: 'com.unhurdle.spectrum.controllers.TreeItemRendererInitializer', parameters: function () { return [ 'org.apache.royale.core.IIndexedItemRenderer', false ,'Object', false ,'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.controllers.TreeItemRendererInitializer.prototype.ROYALE_COMPILE_FLAGS = 11;
