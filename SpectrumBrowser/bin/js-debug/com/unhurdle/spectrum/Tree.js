/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Tree.as
 * com.unhurdle.spectrum.Tree
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Tree');
/* Royale Dependency List: org.apache.royale.core.CSSClassList,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addElementToWrapper*/

goog.require('com.unhurdle.spectrum.ISpectrumElement');
goog.require('org.apache.royale.html.Tree');
goog.require('com.unhurdle.spectrum.interfaces.IKeyboardNavigateable');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/treeview/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {org.apache.royale.html.Tree}
 * @implements {com.unhurdle.spectrum.ISpectrumElement}
 * @implements {com.unhurdle.spectrum.interfaces.IKeyboardNavigateable}
 */
com.unhurdle.spectrum.Tree = function() {
  com.unhurdle.spectrum.Tree.base(this, 'constructor');
  this.classList = new org.apache.royale.core.CSSClassList();
  this.typeNames = this.getSelector();
  this.tabFocusable = true;
};
goog.inherits(com.unhurdle.spectrum.Tree, org.apache.royale.html.Tree);


/**
 * @protected
 * @return {string}
 */
com.unhurdle.spectrum.Tree.prototype.getSelector = function() {
  return "spectrum-TreeView";
};


/**
 * @protected
 * @param {string} value
 * @return {string}
 */
com.unhurdle.spectrum.Tree.prototype.appendSelector = function(value) {
  return this.getSelector() + value;
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tree.prototype.com_unhurdle_spectrum_Tree__quiet = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Tree.prototype.com_unhurdle_spectrum_Tree__standalone = false;


/**
 * @protected
 * @type {org.apache.royale.core.CSSClassList}
 */
com.unhurdle.spectrum.Tree.prototype.classList = null;


/**
 * @param {string} classNameVal
 * @param {boolean} add
 */
com.unhurdle.spectrum.Tree.prototype.toggle = function(classNameVal, add) {
  add ? this.classList.add(classNameVal) : this.classList.remove(classNameVal);
  this.setClassName(this.computeFinalClassNames());
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Tree.prototype.computeFinalClassNames = function() {
  return this.classList.compute() + com.unhurdle.spectrum.Tree.superClass_.computeFinalClassNames.apply(this);
};


/**
 * @protected
 * @param {string} value
 * @return {string}
 */
com.unhurdle.spectrum.Tree.prototype.valueToSelector = function(value) {
  return this.getSelector() + "--" + value;
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Tree.prototype.createElement = function() {
  return org.apache.royale.html.util.addElementToWrapper(this, 'ul');
};


/**
 * @param {string} property
 * @param {Object} value
 */
com.unhurdle.spectrum.Tree.prototype.setStyle = function(property, value) {
  this.element.style[property] = value;
};


/**
 * @param {string} name
 * @param {*} value
 */
com.unhurdle.spectrum.Tree.prototype.setAttribute = function(name, value) {
  this.element.setAttribute(name, value);
};


/**
 * @param {string} name
 * @return {*}
 */
com.unhurdle.spectrum.Tree.prototype.getAttribute = function(name) {
  return this.element.getAttribute(name);
  
};


/**
 * @param {string} name
 */
com.unhurdle.spectrum.Tree.prototype.removeAttribute = function(name) {
  this.element.removeAttribute(name);
};


/**
 * @protected
 * @type {boolean}
 */
com.unhurdle.spectrum.Tree.prototype._tabFocusable = false;


/**
 */
com.unhurdle.spectrum.Tree.prototype.focus = function() {
  this.element.focus();
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tree.prototype.quiet;


com.unhurdle.spectrum.Tree.prototype.get__quiet = function() {
  return this.com_unhurdle_spectrum_Tree__quiet;
};


com.unhurdle.spectrum.Tree.prototype.set__quiet = function(value) {
  if (this.com_unhurdle_spectrum_Tree__quiet != value) {
    this.toggle(this.valueToSelector("quiet"), value);
  }
  this.com_unhurdle_spectrum_Tree__quiet = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tree.prototype.standalone;


com.unhurdle.spectrum.Tree.prototype.get__standalone = function() {
  return this.com_unhurdle_spectrum_Tree__standalone;
};


com.unhurdle.spectrum.Tree.prototype.set__standalone = function(value) {
  if (this.com_unhurdle_spectrum_Tree__standalone != value) {
    this.toggle(this.valueToSelector("standalone"), value);
  }
  this.com_unhurdle_spectrum_Tree__standalone = value;
};


com.unhurdle.spectrum.Tree.prototype.set__dataProvider = function(value) {
  com.unhurdle.spectrum.Tree.superClass_.set__dataProvider.apply(this, [ value] );
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tree.prototype.tabFocusable;


com.unhurdle.spectrum.Tree.prototype.get__tabFocusable = function() {
  return this._tabFocusable;
};


com.unhurdle.spectrum.Tree.prototype.set__tabFocusable = function(value) {
  this._tabFocusable = value;
  if (value) {
    this.setAttribute("tabindex", 0);
  } else {
    this.removeAttribute("tabindex");
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Tree.prototype.autofocus;


com.unhurdle.spectrum.Tree.prototype.get__autofocus = function() {
  
  return !!(this.element["autofocus"]);
};


com.unhurdle.spectrum.Tree.prototype.set__autofocus = function(value) {
  
  this.element["autofocus"] = value;
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.ISpectrumElement}
 */
com.unhurdle.spectrum.Tree.prototype.focusParent;


com.unhurdle.spectrum.Tree.prototype.get__focusParent = function() {
  return this;
};


Object.defineProperties(com.unhurdle.spectrum.Tree.prototype, /** @lends {com.unhurdle.spectrum.Tree.prototype} */ {
/**
 * @type {boolean}
 */
quiet: {
get: com.unhurdle.spectrum.Tree.prototype.get__quiet,
set: com.unhurdle.spectrum.Tree.prototype.set__quiet},
/**
 * @type {boolean}
 */
standalone: {
get: com.unhurdle.spectrum.Tree.prototype.get__standalone,
set: com.unhurdle.spectrum.Tree.prototype.set__standalone},
/**
 * @type {Object}
 */
dataProvider: {
get: org.apache.royale.html.DataContainer.prototype.get__dataProvider,
set: com.unhurdle.spectrum.Tree.prototype.set__dataProvider},
/**
 * @type {boolean}
 */
tabFocusable: {
get: com.unhurdle.spectrum.Tree.prototype.get__tabFocusable,
set: com.unhurdle.spectrum.Tree.prototype.set__tabFocusable},
/**
 * @type {boolean}
 */
autofocus: {
get: com.unhurdle.spectrum.Tree.prototype.get__autofocus,
set: com.unhurdle.spectrum.Tree.prototype.set__autofocus},
/**
 * @type {com.unhurdle.spectrum.ISpectrumElement}
 */
focusParent: {
get: com.unhurdle.spectrum.Tree.prototype.get__focusParent}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Tree.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Tree', qName: 'com.unhurdle.spectrum.Tree', kind: 'class' }], interfaces: [com.unhurdle.spectrum.ISpectrumElement, com.unhurdle.spectrum.interfaces.IKeyboardNavigateable] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Tree.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'quiet': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tree'},
        'standalone': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tree'},
        'dataProvider': { type: 'Object', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.Tree'},
        'tabFocusable': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tree'},
        'autofocus': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Tree'},
        'focusParent': { type: 'com.unhurdle.spectrum.ISpectrumElement', access: 'readonly', declaredBy: 'com.unhurdle.spectrum.Tree'}
      };
    },
    methods: function () {
      return {
        'Tree': { type: '', declaredBy: 'com.unhurdle.spectrum.Tree'},
        'toggle': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Tree', parameters: function () { return [ 'String', false ,'Boolean', false ]; }},
        'setStyle': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Tree', parameters: function () { return [ 'String', false ,'Object', false ]; }},
        'setAttribute': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Tree', parameters: function () { return [ 'String', false ,'*', false ]; }},
        'getAttribute': { type: '*', declaredBy: 'com.unhurdle.spectrum.Tree', parameters: function () { return [ 'String', false ]; }},
        'removeAttribute': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Tree', parameters: function () { return [ 'String', false ]; }},
        'focus': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Tree'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Tree.prototype.ROYALE_COMPILE_FLAGS = 11;
