/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/TabOverflow.as
 * com.unhurdle.spectrum.TabOverflow
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.TabOverflow');
/* Royale Dependency List: com.unhurdle.spectrum.Picker,com.unhurdle.spectrum.Tab,com.unhurdle.spectrum.TabBar,com.unhurdle.spectrum.TabIndicator,com.unhurdle.spectrum.data.MenuItem,org.apache.royale.core.IStrand,org.apache.royale.events.Event,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.Bead');



/**
 * @constructor
 * @extends {org.apache.royale.core.Bead}
 */
com.unhurdle.spectrum.TabOverflow = function() {
  com.unhurdle.spectrum.TabOverflow.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.TabOverflow, org.apache.royale.core.Bead);


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_direction = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Picker}
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_dropDown = null;


/**
 * @private
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_attachElements = function() {
  var /** @type {com.unhurdle.spectrum.TabBar} */ tabBar = this.getHost();
  this.com_unhurdle_spectrum_TabOverflow_dropDown.selectedIndex = tabBar.selectedIndex;
  tabBar.addElement(this.com_unhurdle_spectrum_TabOverflow_dropDown);
  this.com_unhurdle_spectrum_TabOverflow_positionIndicator();
};


/**
 * @private
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_detachElements = function() {
  var /** @type {com.unhurdle.spectrum.TabBar} */ tabBar = this.getHost();
  if (this.com_unhurdle_spectrum_TabOverflow_dropDown && tabBar.getElementIndex(this.com_unhurdle_spectrum_TabOverflow_dropDown) != -1) {
    tabBar.removeElement(this.com_unhurdle_spectrum_TabOverflow_dropDown);
  }
  if (this.com_unhurdle_spectrum_TabOverflow_indicator && tabBar.getElementIndex(this.com_unhurdle_spectrum_TabOverflow_indicator) != -1) {
    tabBar.removeElement(this.com_unhurdle_spectrum_TabOverflow_indicator);
  }
};


/**
 */
com.unhurdle.spectrum.TabOverflow.prototype.setTabs = function() {
  if (this.com_unhurdle_spectrum_TabOverflow_tabs) {
    var /** @type {Array} */ provider = [];
    for (var /** @type {number} */ i = 0; i < this.com_unhurdle_spectrum_TabOverflow_tabs.length; i++) {
      var /** @type {com.unhurdle.spectrum.Tab} */ tab = this.com_unhurdle_spectrum_TabOverflow_tabs[i];
      var /** @type {com.unhurdle.spectrum.data.MenuItem} */ item = new com.unhurdle.spectrum.data.MenuItem(tab.text);
      if (tab.icon) {
        item.icon = tab.icon;
      }
      provider.push(item);
    }
    this.com_unhurdle_spectrum_TabOverflow_dropDown.dataProvider = provider;
  }
  this.com_unhurdle_spectrum_TabOverflow_dropDown.selectedIndex = this.getHost().selectedIndex;
};


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_handleDDChange = function(ev) {
  this.getHost().selectedIndex = this.com_unhurdle_spectrum_TabOverflow_dropDown.selectedIndex;
};


/**
 * @private
 * @type {com.unhurdle.spectrum.TabIndicator}
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_indicator = null;


/**
 * @private
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_positionIndicator = function() {
  if (!this.com_unhurdle_spectrum_TabOverflow_indicator) {
    this.com_unhurdle_spectrum_TabOverflow_indicator = new com.unhurdle.spectrum.TabIndicator();
  }
  this.com_unhurdle_spectrum_TabOverflow_indicator.x = 8;
  this.com_unhurdle_spectrum_TabOverflow_indicator.width = this.com_unhurdle_spectrum_TabOverflow_dropDown.width;
  this.getHost().addElement(this.com_unhurdle_spectrum_TabOverflow_indicator);
};


/**
 * @protected
 * @return {com.unhurdle.spectrum.TabBar}
 */
com.unhurdle.spectrum.TabOverflow.prototype.getHost = function() {
  return this._strand;
};


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_openTabWidth = NaN;


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_handleResize = function(ev) {
  if (!this.com_unhurdle_spectrum_TabOverflow_tabs || !this.com_unhurdle_spectrum_TabOverflow_tabs.length) {
    return;
  }
  var /** @type {com.unhurdle.spectrum.TabBar} */ bar = this.getHost();
  if (bar.vertical) {
    return;
  }
  var /** @type {boolean} */ collapsed = bar.collapsed;
  var /** @type {number} */ totalWidth = bar.width;
  var /** @type {number} */ padding = parseFloat(getComputedStyle(bar.element).paddingRight);
  totalWidth -= padding;
  if (collapsed && !isNaN(this.com_unhurdle_spectrum_TabOverflow_openTabWidth)) {
    if (totalWidth >= this.com_unhurdle_spectrum_TabOverflow_openTabWidth) {
      this.com_unhurdle_spectrum_TabOverflow_detachElements();
      bar.collapsed = false;
    }
    return;
  }
  var /** @type {com.unhurdle.spectrum.Tab} */ lastTab = this.com_unhurdle_spectrum_TabOverflow_tabs[this.com_unhurdle_spectrum_TabOverflow_tabs.length - 1];
  var /** @type {number} */ tabWidth = lastTab.x + lastTab.width;
  this.com_unhurdle_spectrum_TabOverflow_openTabWidth = tabWidth;
  if (tabWidth > totalWidth) {
    if (!collapsed) {
      bar.collapsed = true;
      this.com_unhurdle_spectrum_TabOverflow_attachElements();
    }
  } else if (collapsed) {
    this.com_unhurdle_spectrum_TabOverflow_detachElements();
    bar.collapsed = false;
  }
};


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_handleTabsChanged = function(ev) {
  this.setTabs();
};


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_handleAutoCollapseChanged = function(ev) {
  if (this.getHost().autoCollapse) {
    window.addEventListener("resize", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabOverflow_handleResize, this, 'com_unhurdle_spectrum_TabOverflow_handleResize'), false);
  } else {
    window.removeEventListener("resize", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabOverflow_handleResize, this, 'com_unhurdle_spectrum_TabOverflow_handleResize'), false);
  }
};


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_handleCollapseChange = function(ev) {
  if (this.getHost().collapsed) {
    this.com_unhurdle_spectrum_TabOverflow_attachElements();
  } else {
    this.com_unhurdle_spectrum_TabOverflow_detachElements();
  }
};


/**
 * @type {Array}
 */
com.unhurdle.spectrum.TabOverflow.prototype.com_unhurdle_spectrum_TabOverflow_tabs;


com.unhurdle.spectrum.TabOverflow.prototype.get__com_unhurdle_spectrum_TabOverflow_tabs = function() {
  return this.getHost().tabs;
};


com.unhurdle.spectrum.TabOverflow.prototype.set__strand = function(value) {
  this._strand = value;
  this.com_unhurdle_spectrum_TabOverflow_dropDown = new com.unhurdle.spectrum.Picker();
  this.com_unhurdle_spectrum_TabOverflow_dropDown.addEventListener("change", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabOverflow_handleDDChange, this, 'com_unhurdle_spectrum_TabOverflow_handleDDChange'));
  this.com_unhurdle_spectrum_TabOverflow_dropDown.quiet = true;
  this.setTabs();
  this.listenOnStrand("tabsChanged", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabOverflow_handleTabsChanged, this, 'com_unhurdle_spectrum_TabOverflow_handleTabsChanged'));
  this.listenOnStrand("autoCollapseChanged", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabOverflow_handleAutoCollapseChanged, this, 'com_unhurdle_spectrum_TabOverflow_handleAutoCollapseChanged'));
  this.listenOnStrand("collapsed", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabOverflow_handleCollapseChange, this, 'com_unhurdle_spectrum_TabOverflow_handleCollapseChange'));
  var /** @type {com.unhurdle.spectrum.TabBar} */ tabBar = this.getHost();
  if (tabBar.autoCollapse) {
    window.addEventListener("resize", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TabOverflow_handleResize, this, 'com_unhurdle_spectrum_TabOverflow_handleResize'), false);
  }
  if (tabBar.collapsed) {
    this.com_unhurdle_spectrum_TabOverflow_attachElements();
  }
};


Object.defineProperties(com.unhurdle.spectrum.TabOverflow.prototype, /** @lends {com.unhurdle.spectrum.TabOverflow.prototype} */ {
/**
 * @type {Array}
 */
com_unhurdle_spectrum_TabOverflow_tabs: {
get: com.unhurdle.spectrum.TabOverflow.prototype.get__com_unhurdle_spectrum_TabOverflow_tabs},
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: com.unhurdle.spectrum.TabOverflow.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.TabOverflow.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TabOverflow', qName: 'com.unhurdle.spectrum.TabOverflow', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.TabOverflow.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.TabOverflow'}
      };
    },
    methods: function () {
      return {
        'TabOverflow': { type: '', declaredBy: 'com.unhurdle.spectrum.TabOverflow'},
        'setTabs': { type: 'void', declaredBy: 'com.unhurdle.spectrum.TabOverflow'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.TabOverflow.prototype.ROYALE_COMPILE_FLAGS = 11;
