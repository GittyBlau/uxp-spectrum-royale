/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/SplitButton.as
 * com.unhurdle.spectrum.SplitButton
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.SplitButton');
/* Royale Dependency List: com.unhurdle.spectrum.Button,com.unhurdle.spectrum.IComboBoxModel,com.unhurdle.spectrum.const.IconPrefix,com.unhurdle.spectrum.const.IconType,org.apache.royale.core.WrappedHTMLElement*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/splitbutton/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.SplitButton = function() {
  com.unhurdle.spectrum.SplitButton.base(this, 'constructor');
  this.type = "primary";
};
goog.inherits(com.unhurdle.spectrum.SplitButton, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.SplitButton.prototype.getSelector = function() {
  return "spectrum-SplitButton";
};


/**
 * @private
 * @type {com.unhurdle.spectrum.Button}
 */
com.unhurdle.spectrum.SplitButton.prototype.com_unhurdle_spectrum_SplitButton_actionButton = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Button}
 */
com.unhurdle.spectrum.SplitButton.prototype.com_unhurdle_spectrum_SplitButton_triggerButton = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.SplitButton.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.SplitButton.superClass_.createElement.apply(this);
  this.com_unhurdle_spectrum_SplitButton_actionButton = new com.unhurdle.spectrum.Button();
  this.com_unhurdle_spectrum_SplitButton_actionButton.className = this.appendSelector("-action");
  this.com_unhurdle_spectrum_SplitButton_triggerButton = new com.unhurdle.spectrum.Button();
  this.com_unhurdle_spectrum_SplitButton_triggerButton.className = this.appendSelector("-trigger");
  this.com_unhurdle_spectrum_SplitButton_triggerButton.icon = com.unhurdle.spectrum.const.IconPrefix.SPECTRUM_CSS_ICON + com.unhurdle.spectrum.const.IconType.CHEVRON_DOWN_MEDIUM;
  this.com_unhurdle_spectrum_SplitButton_triggerButton.iconType = com.unhurdle.spectrum.const.IconType.CHEVRON_DOWN_MEDIUM;
  this.com_unhurdle_spectrum_SplitButton_triggerButton.iconClass = this.appendSelector("-icon");
  this.addElement(this.com_unhurdle_spectrum_SplitButton_actionButton);
  this.addElement(this.com_unhurdle_spectrum_SplitButton_triggerButton);
  return elem;
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.SplitButton.prototype.com_unhurdle_spectrum_SplitButton__type = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.SplitButton.prototype.com_unhurdle_spectrum_SplitButton__left = false;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.SplitButton.prototype.com_unhurdle_spectrum_SplitButton__text = null;


/**
 * @private
 * @return {com.unhurdle.spectrum.IComboBoxModel}
 */
com.unhurdle.spectrum.SplitButton.prototype.com_unhurdle_spectrum_SplitButton_getModel = function() {
  return this.model;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.SplitButton.prototype.type;


com.unhurdle.spectrum.SplitButton.prototype.get__type = function() {
  return this.com_unhurdle_spectrum_SplitButton__type;
};


com.unhurdle.spectrum.SplitButton.prototype.set__type = function(value) {
  if (value != this.com_unhurdle_spectrum_SplitButton__type) {
    switch (value) {
      case "cta":
      
      case "primary":
      
      case "secondary":
        break;
      default:
        throw new Error("Invalid type: " + value);
    }
    this.com_unhurdle_spectrum_SplitButton_actionButton.flavor = value;
    this.com_unhurdle_spectrum_SplitButton_triggerButton.flavor = value;
    this.com_unhurdle_spectrum_SplitButton__type = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.SplitButton.prototype.left;


com.unhurdle.spectrum.SplitButton.prototype.get__left = function() {
  return this.com_unhurdle_spectrum_SplitButton__left;
};


com.unhurdle.spectrum.SplitButton.prototype.set__left = function(value) {
  if (value != !!this.com_unhurdle_spectrum_SplitButton__left) {
    this.toggle(this.valueToSelector("left"), value);
    if (value) {
      this.removeElement(this.com_unhurdle_spectrum_SplitButton_actionButton);
      this.addElement(this.com_unhurdle_spectrum_SplitButton_actionButton);
    }
  }
  this.com_unhurdle_spectrum_SplitButton__left = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.SplitButton.prototype.text;


com.unhurdle.spectrum.SplitButton.prototype.get__text = function() {
  return this.com_unhurdle_spectrum_SplitButton__text;
};


com.unhurdle.spectrum.SplitButton.prototype.set__text = function(value) {
  this.com_unhurdle_spectrum_SplitButton__text = value || "";
  this.com_unhurdle_spectrum_SplitButton_actionButton.text = this.com_unhurdle_spectrum_SplitButton__text;
};


/**
 * @nocollapse
 * @export
 * @type {Object}
 */
com.unhurdle.spectrum.SplitButton.prototype.dataProvider;


com.unhurdle.spectrum.SplitButton.prototype.get__dataProvider = function() {
  return this.com_unhurdle_spectrum_SplitButton_getModel().dataProvider;
};


com.unhurdle.spectrum.SplitButton.prototype.set__dataProvider = function(value) {
  this.com_unhurdle_spectrum_SplitButton_getModel().dataProvider = value;
};


Object.defineProperties(com.unhurdle.spectrum.SplitButton.prototype, /** @lends {com.unhurdle.spectrum.SplitButton.prototype} */ {
/**
 * @type {string}
 */
type: {
get: com.unhurdle.spectrum.SplitButton.prototype.get__type,
set: com.unhurdle.spectrum.SplitButton.prototype.set__type},
/**
 * @type {boolean}
 */
left: {
get: com.unhurdle.spectrum.SplitButton.prototype.get__left,
set: com.unhurdle.spectrum.SplitButton.prototype.set__left},
/**
 * @type {string}
 */
text: {
get: com.unhurdle.spectrum.SplitButton.prototype.get__text,
set: com.unhurdle.spectrum.SplitButton.prototype.set__text},
/**
 * @type {Object}
 */
dataProvider: {
get: com.unhurdle.spectrum.SplitButton.prototype.get__dataProvider,
set: com.unhurdle.spectrum.SplitButton.prototype.set__dataProvider}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.SplitButton.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SplitButton', qName: 'com.unhurdle.spectrum.SplitButton', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.SplitButton.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'type': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.SplitButton'},
        'left': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.SplitButton'},
        'text': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.SplitButton'},
        'dataProvider': { type: 'Object', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.SplitButton'}
      };
    },
    methods: function () {
      return {
        'SplitButton': { type: '', declaredBy: 'com.unhurdle.spectrum.SplitButton'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.SplitButton.prototype.ROYALE_COMPILE_FLAGS = 11;
