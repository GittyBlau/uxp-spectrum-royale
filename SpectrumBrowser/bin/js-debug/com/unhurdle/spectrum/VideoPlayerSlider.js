/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/VideoPlayerSlider.as
 * com.unhurdle.spectrum.VideoPlayerSlider
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.VideoPlayerSlider');
/* Royale Dependency List: com.unhurdle.spectrum.newElement,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.MouseEvent,org.apache.royale.geom.Point,org.apache.royale.utils.PointUtils,org.apache.royale.utils.number.getPercent,org.apache.royale.utils.number.pinValue,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SliderBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.SliderBase}
 */
com.unhurdle.spectrum.VideoPlayerSlider = function() {
  com.unhurdle.spectrum.VideoPlayerSlider.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.VideoPlayerSlider, com.unhurdle.spectrum.SliderBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.getSelector = function() {
  return "spectrum-Slider";
};


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.com_unhurdle_spectrum_VideoPlayerSlider_handle = null;


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.com_unhurdle_spectrum_VideoPlayerSlider_leftTrack = null;


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.com_unhurdle_spectrum_VideoPlayerSlider_rightTrack = null;


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.com_unhurdle_spectrum_VideoPlayerSlider_leftBuffer = null;


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.VideoPlayerSlider.superClass_.createElement.apply(this);
  this.controlsContainer = com.unhurdle.spectrum.newElement("div", this.appendSelector("-controls"));
  this.com_unhurdle_spectrum_VideoPlayerSlider_leftTrack = com.unhurdle.spectrum.newElement("div", this.appendSelector("-track"));
  this.controlsContainer.appendChild(this.com_unhurdle_spectrum_VideoPlayerSlider_leftTrack);
  this.com_unhurdle_spectrum_VideoPlayerSlider_leftBuffer = com.unhurdle.spectrum.newElement("div", this.appendSelector("-buffer"));
  this.controlsContainer.appendChild(this.com_unhurdle_spectrum_VideoPlayerSlider_leftBuffer);
  this.com_unhurdle_spectrum_VideoPlayerSlider_handle = com.unhurdle.spectrum.newElement("div", this.appendSelector("-handle"));
  this.input = com.unhurdle.spectrum.newElement("input", this.appendSelector("-input"));
  this.input.type = "range";
  this.input.step = "1";
  this.max = 100;
  this.com_unhurdle_spectrum_VideoPlayerSlider_handle.appendChild(this.input);
  this.controlsContainer.appendChild(this.com_unhurdle_spectrum_VideoPlayerSlider_handle);
  this.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer = com.unhurdle.spectrum.newElement("div", this.appendSelector("-buffer"));
  this.controlsContainer.appendChild(this.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer);
  this.com_unhurdle_spectrum_VideoPlayerSlider_rightTrack = com.unhurdle.spectrum.newElement("div", this.appendSelector("-track"));
  this.controlsContainer.appendChild(this.com_unhurdle_spectrum_VideoPlayerSlider_rightTrack);
  elem.appendChild(this.controlsContainer);
  this.element.addEventListener('mousedown', org.apache.royale.utils.Language.closure(this.onMouseDown, this, 'onMouseDown'));
  return elem;
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.getValue = function() {
  return this.input.value;
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.positionElements = function() {
  var /** @type {number} */ percent = this.value / (this.max - this.min) * 100;
  this.com_unhurdle_spectrum_VideoPlayerSlider_handle.style.left = percent + "%";
  if (this.com_unhurdle_spectrum_VideoPlayerSlider_leftTrack && this.com_unhurdle_spectrum_VideoPlayerSlider_rightTrack) {
    this.com_unhurdle_spectrum_VideoPlayerSlider_leftTrack.style.width = percent + '%';
    this.com_unhurdle_spectrum_VideoPlayerSlider_rightTrack.style.width = (100 - percent) + '%';
  }
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.onMouseMove = function(e) {
  var /** @type {number} */ sliderOffsetWidth = this.element.offsetWidth;
  var /** @type {number} */ localX = org.apache.royale.utils.PointUtils.globalToLocal(new org.apache.royale.geom.Point(e.clientX, e.clientY), this).x;
  var /** @type {number} */ x = org.apache.royale.utils.number.pinValue(localX, 0, sliderOffsetWidth);
  var /** @type {number} */ percent = org.apache.royale.utils.number.getPercent(x, sliderOffsetWidth);
  var /** @type {number} */ val = (this.max - this.min) / (100 / percent) + this.min;
  var /** @type {number} */ stepVal = this.step;
  var /** @type {number} */ rem = val % stepVal;
  val = val - rem;
  if (rem > (stepVal / 2)) {
    val += stepVal;
  }
  var /** @type {number} */ bufferedAmount = 50;
  if (percent >= bufferedAmount) {
    this.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer.style.width = 0;
    this.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer.style.left = bufferedAmount + '%';
    this.com_unhurdle_spectrum_VideoPlayerSlider_leftBuffer.style.width = bufferedAmount + '%';
  } else if (percent < bufferedAmount) {
    this.com_unhurdle_spectrum_VideoPlayerSlider_leftBuffer.style.width = percent + '%';
    this.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer.style.width = bufferedAmount - percent + '%';
    this.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer.style.left = percent + '%';
    this.com_unhurdle_spectrum_VideoPlayerSlider_rightBuffer.style.right = (100 - bufferedAmount) + '%';
  }
  this.value = val;
  this.com_unhurdle_spectrum_VideoPlayerSlider_handle.style.left = this.com_unhurdle_spectrum_VideoPlayerSlider_leftBuffer.style.width + '';
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.value;


com.unhurdle.spectrum.VideoPlayerSlider.prototype.get__value = function() {
  return Number(this.input.value);
};


com.unhurdle.spectrum.VideoPlayerSlider.prototype.set__value = function(value) {
  this.input.value = "" + value;
  if (this.parent) {
    this.positionElements();
  }
  if (this.valueNode) {
    this.valueNode.text = "" + value;
  }
};


Object.defineProperties(com.unhurdle.spectrum.VideoPlayerSlider.prototype, /** @lends {com.unhurdle.spectrum.VideoPlayerSlider.prototype} */ {
/**
 * @type {number}
 */
value: {
get: com.unhurdle.spectrum.VideoPlayerSlider.prototype.get__value,
set: com.unhurdle.spectrum.VideoPlayerSlider.prototype.set__value}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'VideoPlayerSlider', qName: 'com.unhurdle.spectrum.VideoPlayerSlider', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'value': { type: 'Number', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.VideoPlayerSlider'}
      };
    },
    methods: function () {
      return {
        'VideoPlayerSlider': { type: '', declaredBy: 'com.unhurdle.spectrum.VideoPlayerSlider'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.VideoPlayerSlider.prototype.ROYALE_COMPILE_FLAGS = 11;
