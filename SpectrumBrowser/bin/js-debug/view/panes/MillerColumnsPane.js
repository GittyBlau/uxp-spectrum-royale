/**
 * Generated by Apache Royale Compiler from view/panes/MillerColumnsPane.mxml
 * view.panes.MillerColumnsPane
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('view.panes.MillerColumnsPane');
/* Royale Dependency List: view.components.Variant,com.unhurdle.spectrum.MillerColumns,view.components.Markup,view.components.StyledCode,com.unhurdle.spectrum.data.AssetListItem,org.apache.royale.collections.HierarchicalData,org.apache.royale.events.Event,org.apache.royale.events.ValueChangeEvent*/

goog.require('view.DemoPane');



/**
 * @constructor
 * @extends {view.DemoPane}
 */
view.panes.MillerColumnsPane = function() {
  view.panes.MillerColumnsPane.base(this, 'constructor');
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_1;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.MillerColumns}
   */
  this.$ID_12_0;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_3;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_2;
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_5;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.MillerColumns}
   */
  this.$ID_12_4;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_7;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_6;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    2,
    'title',
    true,
    'Miller Columns',
    'notes',
    true,
    'This Spectrum component still needs work',
    0,
    1,
    'initComplete',
    this.$EH_12_0
  ]);
  
};
goog.inherits(view.panes.MillerColumnsPane, view.DemoPane);




/**
 * @type {org.apache.royale.collections.HierarchicalData}
 */
view.panes.MillerColumnsPane.prototype.provider1_ = null;


/**
 * @type {org.apache.royale.collections.HierarchicalData}
 */
view.panes.MillerColumnsPane.prototype.provider2_ = null;


/**
 * @private
 * @const
 * @type {string}
 */
view.panes.MillerColumnsPane.prototype.view_panes_MillerColumnsPane_codeString1 = '<sp:MillerColumns dataProvider="{provider}"/>';


/**
 * @private
 * @const
 * @type {string}
 */
view.panes.MillerColumnsPane.prototype.view_panes_MillerColumnsPane_codeString2 = '<sp:MillerColumns dataProvider="{provider}"/>';


/**
 * @private
 */
view.panes.MillerColumnsPane.prototype.view_panes_MillerColumnsPane_initComplete = function() {
  this.provider1 = new org.apache.royale.collections.HierarchicalData({'children':this.view_panes_MillerColumnsPane_setAssetList(true)});
  this.provider2 = new org.apache.royale.collections.HierarchicalData({'children':this.view_panes_MillerColumnsPane_setAssetList()});
};


/**
 * @private
 * @param {boolean=} branch
 * @return {Array}
 */
view.panes.MillerColumnsPane.prototype.view_panes_MillerColumnsPane_setAssetList = function(branch) {
  branch = typeof branch !== 'undefined' ? branch : false;
  var /** @type {Array} */ arr = [];
  var /** @type {com.unhurdle.spectrum.data.AssetListItem} */ assetListItem = new com.unhurdle.spectrum.data.AssetListItem("File 1");
  assetListItem.isBranch = true;
  if (branch) {
    assetListItem.selectable = true;
  }
  arr.push(assetListItem);
  assetListItem = new com.unhurdle.spectrum.data.AssetListItem("File 2");
  assetListItem.isBranch = true;
  if (branch) {
    assetListItem.selectable = true;
  }
  arr.push(assetListItem);
  assetListItem = new com.unhurdle.spectrum.data.AssetListItem("File 3");
  if (branch) {
    assetListItem.selectable = true;
  }
  assetListItem.imageIcon = "https://opensource.adobe.com/spectrum-css/img/example-ava.jpg";
  arr.push(assetListItem);
  var /** @type {Array} */ childArray = [{"children":arr}];
  return childArray;
};


Object.defineProperties(view.panes.MillerColumnsPane.prototype, /** @lends {view.panes.MillerColumnsPane.prototype} */ {
/**
 * @type {org.apache.royale.collections.HierarchicalData}
 */
provider1: {
/** @this {view.panes.MillerColumnsPane} */
  get: function() {
  return this.provider1_;
  },

/** @this {view.panes.MillerColumnsPane} */
set: function(value) {
if (value != this.provider1_) {
    var oldValue = this.provider1_;
    this.provider1_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "provider1", oldValue, value));
}
}},/**
 * @type {org.apache.royale.collections.HierarchicalData}
 */
provider2: {
/** @this {view.panes.MillerColumnsPane} */
  get: function() {
  return this.provider2_;
  },

/** @this {view.panes.MillerColumnsPane} */
set: function(value) {
if (value != this.provider2_) {
    var oldValue = this.provider2_;
    this.provider2_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "provider2", oldValue, value));
}
}}}
);/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
view.panes.MillerColumnsPane.prototype.$EH_12_0 = function(event)
{
  this.view_panes_MillerColumnsPane_initComplete();
};


Object.defineProperties(view.panes.MillerColumnsPane.prototype, /** @lends {view.panes.MillerColumnsPane.prototype} */ {
  'MXMLDescriptor': {
    /** @this {view.panes.MillerColumnsPane} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = view.panes.MillerColumnsPane.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var data = [
          view.components.Variant,
          3,
          '_id',
          true,
          '$ID_12_1',
          'header',
          true,
          'Miller Columns (Branches Selectable)',
          'notes',
          true,
          'Miller columns that allow both files and folders to be selected.',
          0,
          0,
          [
            com.unhurdle.spectrum.MillerColumns,
            1,
            '_id',
            true,
            '$ID_12_0',
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_3',
          0,
          0,
          [
            view.components.StyledCode,
            1,
            '_id',
            true,
            '$ID_12_2',
            0,
            0,
            null
          ],
          view.components.Variant,
          3,
          '_id',
          true,
          '$ID_12_5',
          'header',
          true,
          'Miller Columns (Files Selectable)',
          'notes',
          true,
          'Miller Columns that only allow files to be selected.',
          0,
          0,
          [
            com.unhurdle.spectrum.MillerColumns,
            1,
            '_id',
            true,
            '$ID_12_4',
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_7',
          0,
          0,
          [
            view.components.StyledCode,
            1,
            '_id',
            true,
            '$ID_12_6',
            0,
            0,
            null
          ]
        ];
        if (arr)
          this.mxmldd = arr.concat(data);
        else
          this.mxmldd = data;
      }
      return this.mxmldd;
    }
  }
});
/**
 * @export
 */
view.panes.MillerColumnsPane.prototype._bindings = [
4,
"provider1",
null,
["$ID_12_0", "dataProvider"],
/** @this {view.panes.MillerColumnsPane} */
function() { return this.view_panes_MillerColumnsPane_codeString1; },
null,
["$ID_12_2", "text"],
"provider2",
null,
["$ID_12_4", "dataProvider"],
/** @this {view.panes.MillerColumnsPane} */
function() { return this.view_panes_MillerColumnsPane_codeString2; },
null,
["$ID_12_6", "text"],
0,
2,
"provider1",
"valueChange",
0,
null,
null,
1,
2,
"provider2",
"valueChange",
2,
null,
null];
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
view.panes.MillerColumnsPane.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MillerColumnsPane', qName: 'view.panes.MillerColumnsPane', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
view.panes.MillerColumnsPane.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'provider1': { type: 'org.apache.royale.collections.HierarchicalData', access: 'readwrite', declaredBy: 'view.panes.MillerColumnsPane'},
        'provider2': { type: 'org.apache.royale.collections.HierarchicalData', access: 'readwrite', declaredBy: 'view.panes.MillerColumnsPane'}
      };
    },
    methods: function () {
      return {
        'MillerColumnsPane': { type: '', declaredBy: 'view.panes.MillerColumnsPane'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
view.panes.MillerColumnsPane.prototype.ROYALE_COMPILE_FLAGS = 9;
