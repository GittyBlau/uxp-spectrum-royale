/**
 * Generated by Apache Royale Compiler from view/panes/AlertPane.mxml
 * view.panes.AlertPane
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('view.panes.AlertPane');
/* Royale Dependency List: com.unhurdle.spectrum.Alert,view.components.Variant,com.unhurdle.spectrum.ButtonGroup,com.unhurdle.spectrum.Button,view.components.Markup,view.components.StyledCode,org.apache.royale.events.MouseEvent,org.apache.royale.events.ValueChangeEvent*/

goog.require('view.DemoPane');



/**
 * @constructor
 * @extends {view.DemoPane}
 */
view.panes.AlertPane = function() {
  view.panes.AlertPane.base(this, 'constructor');
  
  this.codeString_ = '<fx:Declarations>\n' + '  <sp:Alert id="infoAlert" status="info" showOverlay="true" header="Information Alert Header" content="This is an alert"/>\n' + '  <sp:Alert id="successAlert" status="success" showOverlay="true" header="Successful Alert Header" content="This is an alert"/>\n' + '  <sp:Alert id="warningAlert" status="warning" showOverlay="true" header="Warning Alert Header" content="This is an alert"/>\n' + '  <sp:Alert id="helpAlert" status="help" showOverlay="true" header="Helpful Alert Header" content="This is an alert"/>\n' + '  <sp:Alert id="errorAlert" status="error" showOverlay="true" header="Error Alert - Oh no!" content="This is an alert"/>\n' + '  <sp:Alert id="closableAlert" status="error" header="Error - this is really bad!" content="This is an alert" closeText="Close"/>\n' + '</fx:Declarations>\n' + '<sp:Heading size="S" text="Standard"/>\n' + '<html:Div height="12"/>\n' + '<sp:ButtonGroup>\n' + '  <sp:Button text="Open Info" click="infoAlert.show()"/>\n' + '  <sp:Button text="Open Success" click="successAlert.show()"/>\n' + '  <sp:Button text="Open Warning" click="warningAlert.show()"/>\n' + '  <sp:Button text="Open Help" click="helpAlert.show()"/>\n' + '  <sp:Button text="Open Error" click="errorAlert.show()"/>\n' + '  <sp:Button text="Open closable" click="closableAlert.show()"/>\n' + '</sp:ButtonGroup>';
  /**
   * @private
   * @type {com.unhurdle.spectrum.Alert}
   */
  this.infoAlert_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Alert}
   */
  this.successAlert_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Alert}
   */
  this.warningAlert_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Alert}
   */
  this.helpAlert_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Alert}
   */
  this.errorAlert_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Alert}
   */
  this.closableAlert_;
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_7;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ButtonGroup}
   */
  this.$ID_12_6;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Button}
   */
  this.$ID_12_0;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Button}
   */
  this.$ID_12_1;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Button}
   */
  this.$ID_12_2;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Button}
   */
  this.$ID_12_3;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Button}
   */
  this.$ID_12_4;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Button}
   */
  this.$ID_12_5;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_9;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_8;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    1,
    'title',
    true,
    'Alert',
    0,
    0
  ]);
  
};
goog.inherits(view.panes.AlertPane, view.DemoPane);




/**
 * @type {string}
 */
view.panes.AlertPane.prototype.codeString_ = null;


Object.defineProperties(view.panes.AlertPane.prototype, /** @lends {view.panes.AlertPane.prototype} */ {
/**
 * @type {string}
 */
codeString: {
/** @this {view.panes.AlertPane} */
  get: function() {
  return this.codeString_;
  },

/** @this {view.panes.AlertPane} */
set: function(value) {
if (value != this.codeString_) {
    var oldValue = this.codeString_;
    this.codeString_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "codeString", oldValue, value));
}
}}}
);/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
view.panes.AlertPane.prototype.$EH_12_0 = function(event)
{
  this.infoAlert.show();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
view.panes.AlertPane.prototype.$EH_12_1 = function(event)
{
  this.successAlert.show();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
view.panes.AlertPane.prototype.$EH_12_2 = function(event)
{
  this.warningAlert.show();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
view.panes.AlertPane.prototype.$EH_12_3 = function(event)
{
  this.helpAlert.show();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
view.panes.AlertPane.prototype.$EH_12_4 = function(event)
{
  this.errorAlert.show();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
view.panes.AlertPane.prototype.$EH_12_5 = function(event)
{
  this.closableAlert.show();
};


Object.defineProperties(view.panes.AlertPane.prototype, /** @lends {view.panes.AlertPane.prototype} */ {
  infoAlert: {
    /** @this {view.panes.AlertPane} */
    get: function() {
      return this.infoAlert_;
    },
    /** @this {view.panes.AlertPane} */
    set: function(value) {
      if (value != this.infoAlert_) {
        this.infoAlert_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'infoAlert', null, value));
      }
    }
  },
  successAlert: {
    /** @this {view.panes.AlertPane} */
    get: function() {
      return this.successAlert_;
    },
    /** @this {view.panes.AlertPane} */
    set: function(value) {
      if (value != this.successAlert_) {
        this.successAlert_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'successAlert', null, value));
      }
    }
  },
  warningAlert: {
    /** @this {view.panes.AlertPane} */
    get: function() {
      return this.warningAlert_;
    },
    /** @this {view.panes.AlertPane} */
    set: function(value) {
      if (value != this.warningAlert_) {
        this.warningAlert_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'warningAlert', null, value));
      }
    }
  },
  helpAlert: {
    /** @this {view.panes.AlertPane} */
    get: function() {
      return this.helpAlert_;
    },
    /** @this {view.panes.AlertPane} */
    set: function(value) {
      if (value != this.helpAlert_) {
        this.helpAlert_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'helpAlert', null, value));
      }
    }
  },
  errorAlert: {
    /** @this {view.panes.AlertPane} */
    get: function() {
      return this.errorAlert_;
    },
    /** @this {view.panes.AlertPane} */
    set: function(value) {
      if (value != this.errorAlert_) {
        this.errorAlert_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'errorAlert', null, value));
      }
    }
  },
  closableAlert: {
    /** @this {view.panes.AlertPane} */
    get: function() {
      return this.closableAlert_;
    },
    /** @this {view.panes.AlertPane} */
    set: function(value) {
      if (value != this.closableAlert_) {
        this.closableAlert_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'closableAlert', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {view.panes.AlertPane} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = view.panes.AlertPane.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var data = [
          com.unhurdle.spectrum.Alert,
          5,
          'id',
          true,
          'infoAlert',
          'status',
          true,
          'info',
          'showOverlay',
          true,
          true,
          'header',
          true,
          'Information Alert Header',
          'content',
          true,
          'This is an alert',
          0,
          0,
          null,
          com.unhurdle.spectrum.Alert,
          5,
          'id',
          true,
          'successAlert',
          'status',
          true,
          'success',
          'showOverlay',
          true,
          true,
          'header',
          true,
          'Successful Alert Header',
          'content',
          true,
          'This is an alert',
          0,
          0,
          null,
          com.unhurdle.spectrum.Alert,
          5,
          'id',
          true,
          'warningAlert',
          'status',
          true,
          'warning',
          'showOverlay',
          true,
          true,
          'header',
          true,
          'Warning Alert Header',
          'content',
          true,
          'This is an alert',
          0,
          0,
          null,
          com.unhurdle.spectrum.Alert,
          5,
          'id',
          true,
          'helpAlert',
          'status',
          true,
          'help',
          'showOverlay',
          true,
          true,
          'header',
          true,
          'Helpful Alert Header',
          'content',
          true,
          'This is an alert',
          0,
          0,
          null,
          com.unhurdle.spectrum.Alert,
          5,
          'id',
          true,
          'errorAlert',
          'status',
          true,
          'error',
          'showOverlay',
          true,
          true,
          'header',
          true,
          'Error Alert - Oh no!',
          'content',
          true,
          'This is an alert',
          0,
          0,
          null,
          com.unhurdle.spectrum.Alert,
          6,
          'id',
          true,
          'closableAlert',
          'status',
          true,
          'error',
          'showOverlay',
          true,
          true,
          'header',
          true,
          'Error - this is really bad!',
          'content',
          true,
          'This is an alert',
          'closeText',
          true,
          'Close',
          0,
          0,
          null,
          view.components.Variant,
          1,
          '_id',
          true,
          '$ID_12_7',
          0,
          0,
          [
            com.unhurdle.spectrum.ButtonGroup,
            1,
            '_id',
            true,
            '$ID_12_6',
            0,
            0,
            [
              com.unhurdle.spectrum.Button,
              2,
              '_id',
              true,
              '$ID_12_0',
              'text',
              true,
              'Open Info',
              0,
              1,
              'click',
              this.$EH_12_0,
              null,
              com.unhurdle.spectrum.Button,
              2,
              '_id',
              true,
              '$ID_12_1',
              'text',
              true,
              'Open Success',
              0,
              1,
              'click',
              this.$EH_12_1,
              null,
              com.unhurdle.spectrum.Button,
              2,
              '_id',
              true,
              '$ID_12_2',
              'text',
              true,
              'Open Warning',
              0,
              1,
              'click',
              this.$EH_12_2,
              null,
              com.unhurdle.spectrum.Button,
              2,
              '_id',
              true,
              '$ID_12_3',
              'text',
              true,
              'Open Help',
              0,
              1,
              'click',
              this.$EH_12_3,
              null,
              com.unhurdle.spectrum.Button,
              2,
              '_id',
              true,
              '$ID_12_4',
              'text',
              true,
              'Open Error',
              0,
              1,
              'click',
              this.$EH_12_4,
              null,
              com.unhurdle.spectrum.Button,
              2,
              '_id',
              true,
              '$ID_12_5',
              'text',
              true,
              'Open closable',
              0,
              1,
              'click',
              this.$EH_12_5,
              null
            ]
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_9',
          0,
          0,
          [
            view.components.StyledCode,
            1,
            '_id',
            true,
            '$ID_12_8',
            0,
            0,
            null
          ]
        ];
        if (arr)
          this.mxmldd = arr.concat(data);
        else
          this.mxmldd = data;
      }
      return this.mxmldd;
    }
  }
});
/**
 * @export
 */
view.panes.AlertPane.prototype._bindings = [
1,
"codeString",
null,
["$ID_12_8", "text"],
0,
2,
"codeString",
"valueChange",
0,
null,
null];
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
view.panes.AlertPane.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'AlertPane', qName: 'view.panes.AlertPane', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
view.panes.AlertPane.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'codeString': { type: 'String', access: 'readwrite', declaredBy: 'view.panes.AlertPane'},
        'infoAlert': { type: 'com.unhurdle.spectrum.Alert', access: 'readwrite', declaredBy: 'view.panes.AlertPane'},
        'successAlert': { type: 'com.unhurdle.spectrum.Alert', access: 'readwrite', declaredBy: 'view.panes.AlertPane'},
        'warningAlert': { type: 'com.unhurdle.spectrum.Alert', access: 'readwrite', declaredBy: 'view.panes.AlertPane'},
        'helpAlert': { type: 'com.unhurdle.spectrum.Alert', access: 'readwrite', declaredBy: 'view.panes.AlertPane'},
        'errorAlert': { type: 'com.unhurdle.spectrum.Alert', access: 'readwrite', declaredBy: 'view.panes.AlertPane'},
        'closableAlert': { type: 'com.unhurdle.spectrum.Alert', access: 'readwrite', declaredBy: 'view.panes.AlertPane'}
      };
    },
    methods: function () {
      return {
        'AlertPane': { type: '', declaredBy: 'view.panes.AlertPane'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
view.panes.AlertPane.prototype.ROYALE_COMPILE_FLAGS = 9;
