/**
 * Generated by Apache Royale Compiler from view/panes/ActionMenuPane.mxml
 * view.panes.ActionMenuPane
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('view.panes.ActionMenuPane');
/* Royale Dependency List: view.components.Variant,com.unhurdle.spectrum.FlexContainer,com.unhurdle.spectrum.ButtonGroup,com.unhurdle.spectrum.ActionMenu,view.components.Markup,view.components.StyledCode,com.unhurdle.spectrum.Toast,org.apache.royale.events.Event,org.apache.royale.events.ValueChangeEvent*/

goog.require('view.DemoPane');



/**
 * @constructor
 * @extends {view.DemoPane}
 */
view.panes.ActionMenuPane = function() {
  view.panes.ActionMenuPane.base(this, 'constructor');
  
  this.codeString_ = '<sp:FlexContainer vertical="true" alignItems="flex-start">\n' + '  <sp:ButtonGroup vertical="true" style="align-items:flex-start;">\n' + '    <sp:ActionMenu text="More Actions" dataProvider="[Action 1,Action 2,Action 3,Action 4]" change="handleSelection(event)"/>\n' + '    <sp:ActionMenu dataProvider="[Action 1,Action 2,Action 3,Action 4]" change="handleSelection(event)"/>\n' + '    <sp:ActionMenu quiet="true" text="More Actions" dataProvider="[Action 1,Action 2,Action 3,Action 4]" change="handleSelection(event)"/>\n' + '  </sp:ButtonGroup>\n' + '</sp:FlexContainer>';
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_7;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.FlexContainer}
   */
  this.$ID_12_4;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ButtonGroup}
   */
  this.$ID_12_3;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ActionMenu}
   */
  this.$ID_12_0;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ActionMenu}
   */
  this.$ID_12_1;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ActionMenu}
   */
  this.$ID_12_2;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_6;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_5;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    1,
    'title',
    true,
    'Action Menu',
    0,
    0
  ]);
  
};
goog.inherits(view.panes.ActionMenuPane, view.DemoPane);




/**
 * @type {string}
 */
view.panes.ActionMenuPane.prototype.codeString_ = null;


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
view.panes.ActionMenuPane.prototype.view_panes_ActionMenuPane_handleSelection = function(ev) {
  var /** @type {string} */ item = org.apache.royale.utils.Language.string(ev.target.selectedItem.label);
  if (item) {
    new com.unhurdle.spectrum.Toast(item + " selected", 1500).show();
  }
};


Object.defineProperties(view.panes.ActionMenuPane.prototype, /** @lends {view.panes.ActionMenuPane.prototype} */ {
/**
 * @type {string}
 */
codeString: {
/** @this {view.panes.ActionMenuPane} */
  get: function() {
  return this.codeString_;
  },

/** @this {view.panes.ActionMenuPane} */
set: function(value) {
if (value != this.codeString_) {
    var oldValue = this.codeString_;
    this.codeString_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "codeString", oldValue, value));
}
}}}
);/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
view.panes.ActionMenuPane.prototype.$EH_12_0 = function(event)
{
  this.view_panes_ActionMenuPane_handleSelection(event);
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
view.panes.ActionMenuPane.prototype.$EH_12_1 = function(event)
{
  this.view_panes_ActionMenuPane_handleSelection(event);
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
view.panes.ActionMenuPane.prototype.$EH_12_2 = function(event)
{
  this.view_panes_ActionMenuPane_handleSelection(event);
};


Object.defineProperties(view.panes.ActionMenuPane.prototype, /** @lends {view.panes.ActionMenuPane.prototype} */ {
  'MXMLDescriptor': {
    /** @this {view.panes.ActionMenuPane} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = view.panes.ActionMenuPane.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var data = [
          view.components.Variant,
          1,
          '_id',
          true,
          '$ID_12_7',
          0,
          0,
          [
            com.unhurdle.spectrum.FlexContainer,
            3,
            '_id',
            true,
            '$ID_12_4',
            'vertical',
            true,
            true,
            'alignItems',
            true,
            'flex-start',
            0,
            0,
            [
              com.unhurdle.spectrum.ButtonGroup,
              3,
              '_id',
              true,
              '$ID_12_3',
              'vertical',
              true,
              true,
              'style',
              true,
              'align-items:flex-start;',
              0,
              0,
              [
                com.unhurdle.spectrum.ActionMenu,
                3,
                '_id',
                true,
                '$ID_12_0',
                'text',
                true,
                'More Actions',
                'dataProvider',
                true,
                ['Action 1','Action 2','Action 3','Action 4'],
                0,
                1,
                'change',
                this.$EH_12_0,
                null,
                com.unhurdle.spectrum.ActionMenu,
                2,
                '_id',
                true,
                '$ID_12_1',
                'dataProvider',
                true,
                ['Action 1','Action 2','Action 3','Action 4'],
                0,
                1,
                'change',
                this.$EH_12_1,
                null,
                com.unhurdle.spectrum.ActionMenu,
                4,
                '_id',
                true,
                '$ID_12_2',
                'quiet',
                true,
                true,
                'text',
                true,
                'More Actions',
                'dataProvider',
                true,
                ['Action 1','Action 2','Action 3','Action 4'],
                0,
                1,
                'change',
                this.$EH_12_2,
                null
              ]
            ],
            view.components.Markup,
            1,
            '_id',
            true,
            '$ID_12_6',
            0,
            0,
            [
              view.components.StyledCode,
              1,
              '_id',
              true,
              '$ID_12_5',
              0,
              0,
              null
            ]
          ]
        ];
        if (arr)
          this.mxmldd = arr.concat(data);
        else
          this.mxmldd = data;
      }
      return this.mxmldd;
    }
  }
});
/**
 * @export
 */
view.panes.ActionMenuPane.prototype._bindings = [
1,
"codeString",
null,
["$ID_12_5", "text"],
0,
2,
"codeString",
"valueChange",
0,
null,
null];
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
view.panes.ActionMenuPane.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ActionMenuPane', qName: 'view.panes.ActionMenuPane', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
view.panes.ActionMenuPane.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'codeString': { type: 'String', access: 'readwrite', declaredBy: 'view.panes.ActionMenuPane'}
      };
    },
    methods: function () {
      return {
        'ActionMenuPane': { type: '', declaredBy: 'view.panes.ActionMenuPane'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
view.panes.ActionMenuPane.prototype.ROYALE_COMPILE_FLAGS = 9;
