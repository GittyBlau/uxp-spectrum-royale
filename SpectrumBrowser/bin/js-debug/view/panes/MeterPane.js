/**
 * Generated by Apache Royale Compiler from view/panes/MeterPane.mxml
 * view.panes.MeterPane
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('view.panes.MeterPane');
/* Royale Dependency List: view.components.Variant,com.unhurdle.spectrum.BarLoader,view.components.Markup,view.components.StyledCode,org.apache.royale.events.Event,org.apache.royale.utils.Timer*/

goog.require('view.DemoPane');



/**
 * @constructor
 * @extends {view.DemoPane}
 */
view.panes.MeterPane = function() {
  view.panes.MeterPane.base(this, 'constructor');
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_1;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.BarLoader}
   */
  this.loader_;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_3;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_2;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    2,
    'title',
    true,
    'Meter',
    'notes',
    true,
    'Meter is implemented using the BarLoader component.',
    0,
    1,
    'initComplete',
    this.$EH_12_0
  ]);
  
};
goog.inherits(view.panes.MeterPane, view.DemoPane);




/**
 * @private
 */
view.panes.MeterPane.prototype.view_panes_MeterPane_onComplete = function() {
  var self = this;
  var /** @type {org.apache.royale.utils.Timer} */ timer = new org.apache.royale.utils.Timer(100, 100);
  timer.addEventListener(org.apache.royale.utils.Timer.TIMER, function() {
    self.loader.value += 1;
  });
  timer.start();
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
view.panes.MeterPane.prototype.$EH_12_0 = function(event)
{
  this.view_panes_MeterPane_onComplete();
};


Object.defineProperties(view.panes.MeterPane.prototype, /** @lends {view.panes.MeterPane.prototype} */ {
  loader: {
    /** @this {view.panes.MeterPane} */
    get: function() {
      return this.loader_;
    },
    /** @this {view.panes.MeterPane} */
    set: function(value) {
      if (value != this.loader_) {
        this.loader_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'loader', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {view.panes.MeterPane} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = view.panes.MeterPane.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var data = [
          view.components.Variant,
          1,
          '_id',
          true,
          '$ID_12_1',
          0,
          0,
          [
            com.unhurdle.spectrum.BarLoader,
            3,
            '_id',
            true,
            'loader',
            'meter',
            true,
            true,
            'label',
            true,
            'Storage Space',
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_3',
          0,
          0,
          [
            view.components.StyledCode,
            2,
            '_id',
            true,
            '$ID_12_2',
            'text',
            true,
            '<sp:BarLoader localId="loader" meter="true" label="Storage Space"/>',
            0,
            0,
            null
          ]
        ];
        if (arr)
          this.mxmldd = arr.concat(data);
        else
          this.mxmldd = data;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
view.panes.MeterPane.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MeterPane', qName: 'view.panes.MeterPane', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
view.panes.MeterPane.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'MeterPane': { type: '', declaredBy: 'view.panes.MeterPane'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
view.panes.MeterPane.prototype.ROYALE_COMPILE_FLAGS = 9;
