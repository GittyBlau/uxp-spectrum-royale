/**
 * Generated by Apache Royale Compiler from view/panes/CalendarPane.mxml
 * view.panes.CalendarPane
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('view.panes.CalendarPane');
/* Royale Dependency List: view.components.Variant,com.unhurdle.spectrum.Calendar,view.components.Markup,view.components.StyledCode,com.unhurdle.spectrum.Toast,org.apache.royale.events.Event,org.apache.royale.events.ValueChangeEvent,org.apache.royale.events.ValueEvent*/

goog.require('view.DemoPane');



/**
 * @constructor
 * @extends {view.DemoPane}
 */
view.panes.CalendarPane = function() {
  view.panes.CalendarPane.base(this, 'constructor');
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_0;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Calendar}
   */
  this.calendar1_;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_2;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_1;
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_4;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Calendar}
   */
  this.$ID_12_3;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_6;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_5;
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_8;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Calendar}
   */
  this.$ID_12_7;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_10;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_9;
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_12;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Calendar}
   */
  this.$ID_12_11;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_14;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_13;
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_16;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Calendar}
   */
  this.$ID_12_15;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_18;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_17;
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_20;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Calendar}
   */
  this.$ID_12_19;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_22;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_21;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    1,
    'title',
    true,
    'Calendar',
    0,
    1,
    'initComplete',
    this.$EH_12_0
  ]);
  
};
goog.inherits(view.panes.CalendarPane, view.DemoPane);




/**
 * @type {Date}
 */
view.panes.CalendarPane.prototype.firstDate_ = null;


/**
 * @type {Date}
 */
view.panes.CalendarPane.prototype.lastDate_ = null;


/**
 * @type {string}
 */
view.panes.CalendarPane.prototype.rangeText_ = '<sp:Calendar startDate="{firstDate}" endDate="{lastDate}"/>';


/**
 * @type {string}
 */
view.panes.CalendarPane.prototype.startText_ = '<sp:Calendar startDate="{firstDate}"/>';


/**
 * @type {string}
 */
view.panes.CalendarPane.prototype.endText_ = '<sp:Calendar endDate="{lastDate}"/>';


/**
 * @private
 */
view.panes.CalendarPane.prototype.view_panes_CalendarPane_onComplete = function() {
  var /** @type {Date} */ now = new Date();
  var /** @type {Date} */ first = new Date();
  first.setDate(now.getDate() - 3);
  this.firstDate = first;
  var /** @type {Date} */ last = new Date();
  last.setDate(now.getDate() + 3);
  this.lastDate = last;
};


/**
 * @private
 * @param {org.apache.royale.events.ValueEvent} ev
 */
view.panes.CalendarPane.prototype.view_panes_CalendarPane_onDateChange = function(ev) {
  new com.unhurdle.spectrum.Toast(ev.value.toDateString(), 1000).show();
};


Object.defineProperties(view.panes.CalendarPane.prototype, /** @lends {view.panes.CalendarPane.prototype} */ {
/**
 * @type {string}
 */
endText: {
/** @this {view.panes.CalendarPane} */
  get: function() {
  return this.endText_;
  },

/** @this {view.panes.CalendarPane} */
set: function(value) {
if (value != this.endText_) {
    var oldValue = this.endText_;
    this.endText_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "endText", oldValue, value));
}
}},/**
 * @type {Date}
 */
firstDate: {
/** @this {view.panes.CalendarPane} */
  get: function() {
  return this.firstDate_;
  },

/** @this {view.panes.CalendarPane} */
set: function(value) {
if (value != this.firstDate_) {
    var oldValue = this.firstDate_;
    this.firstDate_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "firstDate", oldValue, value));
}
}},/**
 * @type {Date}
 */
lastDate: {
/** @this {view.panes.CalendarPane} */
  get: function() {
  return this.lastDate_;
  },

/** @this {view.panes.CalendarPane} */
set: function(value) {
if (value != this.lastDate_) {
    var oldValue = this.lastDate_;
    this.lastDate_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "lastDate", oldValue, value));
}
}},/**
 * @type {string}
 */
rangeText: {
/** @this {view.panes.CalendarPane} */
  get: function() {
  return this.rangeText_;
  },

/** @this {view.panes.CalendarPane} */
set: function(value) {
if (value != this.rangeText_) {
    var oldValue = this.rangeText_;
    this.rangeText_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "rangeText", oldValue, value));
}
}},/**
 * @type {string}
 */
startText: {
/** @this {view.panes.CalendarPane} */
  get: function() {
  return this.startText_;
  },

/** @this {view.panes.CalendarPane} */
set: function(value) {
if (value != this.startText_) {
    var oldValue = this.startText_;
    this.startText_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "startText", oldValue, value));
}
}}}
);/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
view.panes.CalendarPane.prototype.$EH_12_0 = function(event)
{
  this.view_panes_CalendarPane_onComplete();
};


/**
 * @export
 * @param {org.apache.royale.events.ValueEvent} event
 */
view.panes.CalendarPane.prototype.$EH_12_1 = function(event)
{
  this.view_panes_CalendarPane_onDateChange(event);
};


Object.defineProperties(view.panes.CalendarPane.prototype, /** @lends {view.panes.CalendarPane.prototype} */ {
  calendar1: {
    /** @this {view.panes.CalendarPane} */
    get: function() {
      return this.calendar1_;
    },
    /** @this {view.panes.CalendarPane} */
    set: function(value) {
      if (value != this.calendar1_) {
        this.calendar1_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'calendar1', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {view.panes.CalendarPane} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = view.panes.CalendarPane.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var data = [
          view.components.Variant,
          1,
          '_id',
          true,
          '$ID_12_0',
          0,
          0,
          [
            com.unhurdle.spectrum.Calendar,
            1,
            'id',
            true,
            'calendar1',
            0,
            1,
            'selectedDateChanged',
            this.$EH_12_1,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_2',
          0,
          0,
          [
            view.components.StyledCode,
            2,
            '_id',
            true,
            '$ID_12_1',
            'text',
            true,
            '<sp:Calendar selectedDateChanged="onDateChange(event)"/>',
            0,
            0,
            null
          ],
          view.components.Variant,
          2,
          '_id',
          true,
          '$ID_12_4',
          'header',
          true,
          'Narrow Headers',
          0,
          0,
          [
            com.unhurdle.spectrum.Calendar,
            2,
            '_id',
            true,
            '$ID_12_3',
            'useNarrowHeaders',
            true,
            true,
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_6',
          0,
          0,
          [
            view.components.StyledCode,
            2,
            '_id',
            true,
            '$ID_12_5',
            'text',
            true,
            '<sp:Calendar useNarrowHeaders="true"/>',
            0,
            0,
            null
          ],
          view.components.Variant,
          2,
          '_id',
          true,
          '$ID_12_8',
          'header',
          true,
          'Disabled',
          0,
          0,
          [
            com.unhurdle.spectrum.Calendar,
            2,
            '_id',
            true,
            '$ID_12_7',
            'disabled',
            true,
            true,
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_10',
          0,
          0,
          [
            view.components.StyledCode,
            2,
            '_id',
            true,
            '$ID_12_9',
            'text',
            true,
            '<sp:Calendar disabled="true"/>',
            0,
            0,
            null
          ],
          view.components.Variant,
          2,
          '_id',
          true,
          '$ID_12_12',
          'header',
          true,
          'Range',
          0,
          0,
          [
            com.unhurdle.spectrum.Calendar,
            1,
            '_id',
            true,
            '$ID_12_11',
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_14',
          0,
          0,
          [
            view.components.StyledCode,
            1,
            '_id',
            true,
            '$ID_12_13',
            0,
            0,
            null
          ],
          view.components.Variant,
          2,
          '_id',
          true,
          '$ID_12_16',
          'header',
          true,
          'Start Range',
          0,
          0,
          [
            com.unhurdle.spectrum.Calendar,
            1,
            '_id',
            true,
            '$ID_12_15',
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_18',
          0,
          0,
          [
            view.components.StyledCode,
            1,
            '_id',
            true,
            '$ID_12_17',
            0,
            0,
            null
          ],
          view.components.Variant,
          2,
          '_id',
          true,
          '$ID_12_20',
          'header',
          true,
          'End Range',
          0,
          0,
          [
            com.unhurdle.spectrum.Calendar,
            1,
            '_id',
            true,
            '$ID_12_19',
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_22',
          0,
          0,
          [
            view.components.StyledCode,
            1,
            '_id',
            true,
            '$ID_12_21',
            0,
            0,
            null
          ]
        ];
        if (arr)
          this.mxmldd = arr.concat(data);
        else
          this.mxmldd = data;
      }
      return this.mxmldd;
    }
  }
});
/**
 * @export
 */
view.panes.CalendarPane.prototype._bindings = [
7,
"firstDate",
null,
["$ID_12_11", "startDate"],
"lastDate",
null,
["$ID_12_11", "endDate"],
"rangeText",
null,
["$ID_12_13", "text"],
"firstDate",
null,
["$ID_12_15", "startDate"],
"startText",
null,
["$ID_12_17", "text"],
"lastDate",
null,
["$ID_12_19", "endDate"],
"endText",
null,
["$ID_12_21", "text"],
0,
2,
"firstDate",
"valueChange",
[0,3],
null,
null,
1,
2,
"lastDate",
"valueChange",
[1,5],
null,
null,
2,
2,
"rangeText",
"valueChange",
2,
null,
null,
3,
2,
"startText",
"valueChange",
4,
null,
null,
4,
2,
"endText",
"valueChange",
6,
null,
null];
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
view.panes.CalendarPane.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CalendarPane', qName: 'view.panes.CalendarPane', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
view.panes.CalendarPane.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'firstDate': { type: 'Date', access: 'readwrite', declaredBy: 'view.panes.CalendarPane'},
        'rangeText': { type: 'String', access: 'readwrite', declaredBy: 'view.panes.CalendarPane'},
        'startText': { type: 'String', access: 'readwrite', declaredBy: 'view.panes.CalendarPane'},
        'endText': { type: 'String', access: 'readwrite', declaredBy: 'view.panes.CalendarPane'},
        'lastDate': { type: 'Date', access: 'readwrite', declaredBy: 'view.panes.CalendarPane'},
        'calendar1': { type: 'com.unhurdle.spectrum.Calendar', access: 'readwrite', declaredBy: 'view.panes.CalendarPane'}
      };
    },
    methods: function () {
      return {
        'CalendarPane': { type: '', declaredBy: 'view.panes.CalendarPane'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
view.panes.CalendarPane.prototype.ROYALE_COMPILE_FLAGS = 9;
