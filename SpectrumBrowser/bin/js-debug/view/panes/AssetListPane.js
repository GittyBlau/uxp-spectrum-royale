/**
 * Generated by Apache Royale Compiler from view/panes/AssetListPane.mxml
 * view.panes.AssetListPane
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('view.panes.AssetListPane');
/* Royale Dependency List: view.components.Variant,com.unhurdle.spectrum.AssetList,view.components.Markup,view.components.StyledCode,com.unhurdle.spectrum.const.IconPrefix,com.unhurdle.spectrum.data.AssetListItem,org.apache.royale.events.Event,org.apache.royale.events.ValueChangeEvent*/

goog.require('view.DemoPane');



/**
 * @constructor
 * @extends {view.DemoPane}
 */
view.panes.AssetListPane = function() {
  view.panes.AssetListPane.base(this, 'constructor');
  
  /**
   * @private
   * @type {view.components.Variant}
   */
  this.$ID_12_1;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.AssetList}
   */
  this.$ID_12_0;
  
  /**
   * @private
   * @type {view.components.Markup}
   */
  this.$ID_12_3;
  
  /**
   * @private
   * @type {view.components.StyledCode}
   */
  this.$ID_12_2;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    2,
    'title',
    true,
    'Asset List',
    'notes',
    true,
    'A selectable list of Assets, often used inside of Miller Columns. (sublists not yet implemented)',
    0,
    1,
    'initComplete',
    this.$EH_12_0
  ]);
  
};
goog.inherits(view.panes.AssetListPane, view.DemoPane);




/**
 * @private
 */
view.panes.AssetListPane.prototype.view_panes_AssetListPane_onComplete = function() {
  var /** @type {Array} */ arr = [];
  var /** @type {com.unhurdle.spectrum.data.AssetListItem} */ item = new com.unhurdle.spectrum.data.AssetListItem("Shantanu.jpg");
  item.imageIcon = "https://opensource.adobe.com/spectrum-css/img/example-ava.jpg";
  item.selectable = true;
  arr.push(item);
  item = new com.unhurdle.spectrum.data.AssetListItem("Resource Allocation.csv");
  item.icon = com.unhurdle.spectrum.const.IconPrefix._24 + "FileCSV";
  item.selectable = true;
  arr.push(item);
  item = new com.unhurdle.spectrum.data.AssetListItem("Frontend Projects");
  item.icon = com.unhurdle.spectrum.const.IconPrefix._24 + "Folder";
  item.selectable = true;
  item.isBranch = true;
  arr.push(item);
  this.provider = arr;
};


/**
 * @type {Array}
 */
view.panes.AssetListPane.prototype.provider_ = null;


/**
 * @type {string}
 */
view.panes.AssetListPane.prototype.codeString_ = '<sp:AssetList dataProvider="{provider}"/>';


Object.defineProperties(view.panes.AssetListPane.prototype, /** @lends {view.panes.AssetListPane.prototype} */ {
/**
 * @type {string}
 */
codeString: {
/** @this {view.panes.AssetListPane} */
  get: function() {
  return this.codeString_;
  },

/** @this {view.panes.AssetListPane} */
set: function(value) {
if (value != this.codeString_) {
    var oldValue = this.codeString_;
    this.codeString_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "codeString", oldValue, value));
}
}},/**
 * @type {Array}
 */
provider: {
/** @this {view.panes.AssetListPane} */
  get: function() {
  return this.provider_;
  },

/** @this {view.panes.AssetListPane} */
set: function(value) {
if (value != this.provider_) {
    var oldValue = this.provider_;
    this.provider_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "provider", oldValue, value));
}
}}}
);/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
view.panes.AssetListPane.prototype.$EH_12_0 = function(event)
{
  this.view_panes_AssetListPane_onComplete();
};


Object.defineProperties(view.panes.AssetListPane.prototype, /** @lends {view.panes.AssetListPane.prototype} */ {
  'MXMLDescriptor': {
    /** @this {view.panes.AssetListPane} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = view.panes.AssetListPane.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var data = [
          view.components.Variant,
          1,
          '_id',
          true,
          '$ID_12_1',
          0,
          0,
          [
            com.unhurdle.spectrum.AssetList,
            1,
            '_id',
            true,
            '$ID_12_0',
            0,
            0,
            null
          ],
          view.components.Markup,
          1,
          '_id',
          true,
          '$ID_12_3',
          0,
          0,
          [
            view.components.StyledCode,
            1,
            '_id',
            true,
            '$ID_12_2',
            0,
            0,
            null
          ]
        ];
        if (arr)
          this.mxmldd = arr.concat(data);
        else
          this.mxmldd = data;
      }
      return this.mxmldd;
    }
  }
});
/**
 * @export
 */
view.panes.AssetListPane.prototype._bindings = [
2,
"provider",
null,
["$ID_12_0", "dataProvider"],
"codeString",
null,
["$ID_12_2", "text"],
0,
2,
"provider",
"valueChange",
0,
null,
null,
1,
2,
"codeString",
"valueChange",
1,
null,
null];
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
view.panes.AssetListPane.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'AssetListPane', qName: 'view.panes.AssetListPane', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
view.panes.AssetListPane.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'provider': { type: 'Array', access: 'readwrite', declaredBy: 'view.panes.AssetListPane'},
        'codeString': { type: 'String', access: 'readwrite', declaredBy: 'view.panes.AssetListPane'}
      };
    },
    methods: function () {
      return {
        'AssetListPane': { type: '', declaredBy: 'view.panes.AssetListPane'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
view.panes.AssetListPane.prototype.ROYALE_COMPILE_FLAGS = 9;
