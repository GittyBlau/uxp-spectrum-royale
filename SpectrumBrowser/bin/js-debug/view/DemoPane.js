/**
 * Generated by Apache Royale Compiler from view/DemoPane.as
 * view.DemoPane
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('view.DemoPane');
/* Royale Dependency List: com.unhurdle.spectrum.Divider,com.unhurdle.spectrum.Group,com.unhurdle.spectrum.TypographyGroup,com.unhurdle.spectrum.typography.Body,com.unhurdle.spectrum.typography.Display,com.unhurdle.spectrum.typography.Heading,org.apache.royale.html.Spacer,view.ThemePicker*/

goog.require('com.unhurdle.spectrum.Container');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.Container}
 */
view.DemoPane = function() {
  view.DemoPane.base(this, 'constructor');
  this.typeNames = 'pane-container';
  this.addElement(new view.ThemePicker());
  this.view_DemoPane_addVariants();
};
goog.inherits(view.DemoPane, com.unhurdle.spectrum.Container);


/**
 * @private
 */
view.DemoPane.prototype.view_DemoPane_addVariants = function() {
  var /** @type {com.unhurdle.spectrum.Group} */ group = new com.unhurdle.spectrum.Group();
  var /** @type {com.unhurdle.spectrum.typography.Heading} */ heading = new com.unhurdle.spectrum.typography.Heading();
  heading.size = "M";
  heading.text = "Variants";
  group.addElement(heading);
  var /** @type {com.unhurdle.spectrum.Divider} */ divider = new com.unhurdle.spectrum.Divider();
  divider.size = "large";
  group.addElement(divider);
  this.addElement(group);
};


/**
 * @private
 * @type {com.unhurdle.spectrum.typography.Display}
 */
view.DemoPane.prototype.view_DemoPane_titleElem = null;


/**
 * @private
 * @type {string}
 */
view.DemoPane.prototype.view_DemoPane__title = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Group}
 */
view.DemoPane.prototype.view_DemoPane_notesGroup = null;


/**
 * @private
 * @type {string}
 */
view.DemoPane.prototype.view_DemoPane__notes = null;


/**
 * @private
 */
view.DemoPane.prototype.view_DemoPane_removeNotesGroup = function() {
  this.removeElement(this.view_DemoPane_notesGroup);
  this.view_DemoPane_notesGroup = null;
};


/**
 * @private
 */
view.DemoPane.prototype.view_DemoPane_wrapNotesBody = function() {
  this.title = this.title;
  this.view_DemoPane_notesGroup = new com.unhurdle.spectrum.Group();
  var /** @type {com.unhurdle.spectrum.typography.Heading} */ notesHeading = new com.unhurdle.spectrum.typography.Heading();
  notesHeading.size = "M";
  notesHeading.text = "Usage notes";
  this.view_DemoPane_notesGroup.addElement(notesHeading);
  var /** @type {com.unhurdle.spectrum.Divider} */ divider = new com.unhurdle.spectrum.Divider();
  divider.size = "large";
  this.view_DemoPane_notesGroup.addElement(divider);
  var /** @type {org.apache.royale.html.Spacer} */ spacer = new org.apache.royale.html.Spacer();
  spacer.height = 33;
  this.view_DemoPane_notesGroup.addElement(spacer);
  this.view_DemoPane_notesGroup.addElement(this.view_DemoPane__notesBody);
  spacer = new org.apache.royale.html.Spacer();
  spacer.height = 33;
  this.view_DemoPane_notesGroup.addElement(spacer);
  this.addElementAt(this.view_DemoPane_notesGroup, 2);
};


/**
 * @private
 * @type {com.unhurdle.spectrum.typography.Body}
 */
view.DemoPane.prototype.view_DemoPane__notesBody = null;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
view.DemoPane.prototype.title;


view.DemoPane.prototype.get__title = function() {
  return this.view_DemoPane__title;
};


view.DemoPane.prototype.set__title = function(value) {
  if (!this.view_DemoPane_titleElem) {
    var /** @type {com.unhurdle.spectrum.TypographyGroup} */ article = new com.unhurdle.spectrum.TypographyGroup();
    article.setStyle("paddingBottom", "33px");
    this.view_DemoPane_titleElem = new com.unhurdle.spectrum.typography.Display();
    this.view_DemoPane_titleElem.serif = true;
    article.addElement(this.view_DemoPane_titleElem);
    this.addElementAt(article, 1);
  }
  this.view_DemoPane__title = value;
  this.view_DemoPane_titleElem.text = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
view.DemoPane.prototype.notes;


view.DemoPane.prototype.get__notes = function() {
  return this.view_DemoPane__notes;
};


view.DemoPane.prototype.set__notes = function(value) {
  if (value) {
    if (!this.view_DemoPane_notesGroup) {
      this.view_DemoPane__notesBody = new com.unhurdle.spectrum.typography.Body();
      this.view_DemoPane__notesBody.size = "M";
      this.view_DemoPane_wrapNotesBody();
    }
    this.view_DemoPane__notesBody.text = value;
  } else if (this.view_DemoPane_notesGroup) {
    this.view_DemoPane_removeNotesGroup();
  }
  this.view_DemoPane__notes = value;
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.typography.Body}
 */
view.DemoPane.prototype.notesBody;


view.DemoPane.prototype.get__notesBody = function() {
  return this.view_DemoPane__notesBody;
};


view.DemoPane.prototype.set__notesBody = function(value) {
  this.view_DemoPane__notesBody = value;
  if (value) {
    this.view_DemoPane_wrapNotesBody();
  } else {
    this.view_DemoPane_removeNotesGroup();
  }
};


Object.defineProperties(view.DemoPane.prototype, /** @lends {view.DemoPane.prototype} */ {
/**
 * @type {string}
 */
title: {
get: view.DemoPane.prototype.get__title,
set: view.DemoPane.prototype.set__title},
/**
 * @type {string}
 */
notes: {
get: view.DemoPane.prototype.get__notes,
set: view.DemoPane.prototype.set__notes},
/**
 * @type {com.unhurdle.spectrum.typography.Body}
 */
notesBody: {
get: view.DemoPane.prototype.get__notesBody,
set: view.DemoPane.prototype.set__notesBody}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
view.DemoPane.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DemoPane', qName: 'view.DemoPane', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
view.DemoPane.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'title': { type: 'String', access: 'readwrite', declaredBy: 'view.DemoPane'},
        'notes': { type: 'String', access: 'readwrite', declaredBy: 'view.DemoPane'},
        'notesBody': { type: 'com.unhurdle.spectrum.typography.Body', access: 'readwrite', declaredBy: 'view.DemoPane'}
      };
    },
    methods: function () {
      return {
        'DemoPane': { type: '', declaredBy: 'view.DemoPane'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
view.DemoPane.prototype.ROYALE_COMPILE_FLAGS = 9;
