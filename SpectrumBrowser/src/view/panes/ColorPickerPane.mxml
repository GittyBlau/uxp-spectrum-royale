<view:DemoPane xmlns:fx="http://ns.adobe.com/mxml/2009"
  xmlns:view="view.*" xmlns:sp="library://ns.unhurdle.com/spectrum"
  xmlns="library://ns.apache.org/royale/html" xmlns:comp="view.components.*"
  initComplete="initCompleteHandler(event)"
  title="Color Picker">
  <fx:Script>
    <![CDATA[
      import org.apache.royale.events.Event;
      import com.unhurdle.spectrum.data.RGBColor;
      import com.unhurdle.spectrum.Toast;
      import org.apache.royale.events.ValueEvent;
      import com.unhurdle.spectrum.interfaces.IRGBA;
      [Bindable] public var colorPicker:String = 
        '<sp:ColorPicker dataProvider="{dp}" selectedIndex="0"/>';

      private function initCompleteHandler(e:Event):void{
        var dp:Array = [new RGBColor()];
				for (var i:int = 0; i < 30; i++)
				{
          var colorObj:RGBColor = new RGBColor();
          colorObj.colorValue = uint(Math.random() * 0xFFFFFF);
          colorObj.alpha = Math.random();
          // colorModel.color = color;
          // colorModel.alpha = alpha;
					dp.push(colorObj);
				}
        myColorPicker.dataProvider = dp;
        myColorPicker.appliedColor = dp[0];
      }
      private function onCancel():void{
        new Toast("canceled",2000).show();
      }
      private function onApply(ev:ValueEvent):void{
        var color:IRGBA = ev.value as IRGBA;
        new Toast("Color: " + color.styleString + " applied.",2000).show();
      }
    ]]>
  </fx:Script>
  <sp:ColorPicker id="myColorPicker" cancel="onCancel()" colorCommit="onApply(event)"/>
  <comp:Markup>
    <comp:StyledCode text="{colorPicker}"/>
  </comp:Markup>

</view:DemoPane>