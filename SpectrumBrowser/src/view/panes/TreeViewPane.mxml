<view:DemoPane xmlns="library://ns.apache.org/royale/html"
  xmlns:fx="http://ns.adobe.com/mxml/2009"
  xmlns:view="view.*" xmlns:sp="library://ns.unhurdle.com/spectrum"
  xmlns:assets="view.assets.*" xmlns:comp="view.components.*" xmlns:js="library://ns.apache.org/royale/basic"
  title="Tree View" initComplete="initComplete()">
  <fx:Script>
    <![CDATA[
      import org.apache.royale.collections.TreeData;
      import org.apache.royale.collections.HierarchicalData;
      import com.unhurdle.spectrum.const.IconPrefix;

      [Bindable]public var provider1:TreeData;
      [Bindable]public var provider2:TreeData;
      [Bindable]public var provider3:TreeData;
      [Bindable]public var provider4:TreeData;

      private function initComplete():void
      {
        var arr1:Array = [];
        arr1.push({label:'Layer 1'});
        arr1.push({label:'Group 1',children:[{label:'Layer 2'},{label:'Layer 3'}]});
        arr1.push({label:'Layer 4'});
        arr1.push({label:'Layer 5'});
        arr1.push({label:'Group 2',children:[{label:'Group 3',children:[{label:'Group 4',children:[{label:'Layer 6'},{label:'Group 5',children:[]}]}]}]});
        var hierarchicalData1:HierarchicalData = new HierarchicalData({'children':arr1});
        var treeData:TreeData = new TreeData(hierarchicalData1);
        treeData.openNode(arr1[1]);
        provider1 = treeData;

        var arr3:Array = [];
        arr3.push({label:'Layer 1',icon:IconPrefix._18 + "Layers"});
        arr3.push({label:'Group 1',icon:IconPrefix._18 + "Folder",children:[{label:'Layer 2',icon:IconPrefix._18 + "Layers"},{label:'Layer 3',icon:IconPrefix._18 + "Layers"}]});
        arr3.push({label:'Layer 4',icon:IconPrefix._18 + "Layers"});
        arr3.push({label:'Layer 5',icon:IconPrefix._18 + "Layers"});
        arr3.push({label:'Group 2',icon:IconPrefix._18 + "Folder",children:[{label:'Group 3',icon:IconPrefix._18 + "Folder",children:[{label:'Group 4',icon:IconPrefix._18 + "Folder",children:[{label:'Layer 6',icon:IconPrefix._18 + "Layers"},{label:'Group 5',icon:IconPrefix._18 + "Folder",children:[]}]}]}]});
        var hierarchicalData3:HierarchicalData = new HierarchicalData({'children':arr3});
        provider3 = new TreeData(hierarchicalData3);

        var arr4:Array = [];
        arr4.push({label:'Layer 1'});
        arr4.push({label:'Group 1',disabled:true,children:[{label:'Layer 2'},{label:'Layer 3'}]});
        arr4.push({label:'Layer 4'});
        arr4.push({label:'Layer 5'});
        arr4.push({label:'Group 2',children:[{label:'Group 3',children:[{label:'Group 4',children:[{label:'Layer 6'},{label:'Group 5',children:[]}]}]}]});
        var hierarchicalData4:HierarchicalData = new HierarchicalData({'children':arr4});
        provider4 = new TreeData(hierarchicalData4);

        var arr2:Array = [];
        arr2.push({label:'Layer 1'});
        arr2.push({label:'Layer 2'});
        var hierarchicalData2:HierarchicalData = new HierarchicalData({'children':arr2});
        provider2 = new TreeData(hierarchicalData2);
      }
      [Bindable]private var notes:String = 'Standalone treeviews are meant to be used outside of a panel.\nItems in standalone treeviews have rounded corners.';
      [Bindable]public var codeString1:String = '<sp:Tree dataProvider="{provider1}"/>';
      [Bindable]public var codeString3:String = '<sp:Tree dataProvider="{provider3}"/>';
      [Bindable]public var codeString4:String = '<sp:Tree dataProvider="{provider4}"/>';
      [Bindable]public var codeStringQuiet:String = '<sp:Tree dataProvider="{provider2}" quiet="true"/>';
      [Bindable]public var codeStringStandalone:String = '<sp:Tree dataProvider="{provider2}" standalone="true"/>';
      [Bindable]public var codeStringStandaloneQuiet:String = '<sp:Tree dataProvider="{provider2}" standalone="true" quiet="true"/>';
    ]]>
  </fx:Script>
  <comp:Variant >
    <sp:Tree dataProvider="{provider1}"/>
  </comp:Variant>
  <comp:Markup>
      <comp:StyledCode text="{codeString1}"/>
  </comp:Markup>
  <comp:Variant header="Quiet" notes="A Spectrum tree view quiet selection.">
    <sp:Tree dataProvider="{provider2}" quiet="true"/>
  </comp:Variant>
  <comp:Markup>
    <comp:StyledCode text="{codeStringQuiet}"/>
  </comp:Markup>
  <comp:Variant header="Standalone" notes="{notes}">
    <sp:Tree dataProvider="{provider2}" standalone="true"/>
  </comp:Variant>
  <comp:Markup>
    <comp:StyledCode text="{codeStringStandalone}"/>
  </comp:Markup>
  <comp:Variant header="Standalone (quiet)" notes="A standalone, quiet treeview.">
    <sp:Tree dataProvider="{provider2}" standalone="true" quiet="true"/>
  </comp:Variant>
  <comp:Markup>
    <comp:StyledCode text="{codeStringStandaloneQuiet}"/>
  </comp:Markup>
  <comp:Variant header="Icons" notes="A Spectrum tree view with icons.">
    <sp:Tree dataProvider="{provider3}"/>
  </comp:Variant>
  <comp:Markup>
    <comp:StyledCode text="{codeString3}"/>
  </comp:Markup>
  <comp:Variant header="Disabled">
    <sp:Tree dataProvider="{provider4}"/>
  </comp:Variant>
  <comp:Markup>
    <comp:StyledCode text="{codeString4}"/>
  </comp:Markup>
</view:DemoPane>